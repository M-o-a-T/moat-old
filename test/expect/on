NEW: ‹ConditionalWorkSequence:7 (4)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
TRACE locking +WAIT 1 start job ‹Collected Parser:n1›
TRACE locking -WAIT 1 start job ‹Collected Parser:n1›
TRACE locking +WAIT 2 start job <homevent.tokize.tokizer obj>
TRACE locking -WAIT 2 start job <homevent.tokize.tokizer obj>
TRACE Create OnEvtHandler: fuß
TRACE NewHandler 8
TRACE Create OnEvtHandler: num¦1
TRACE NewHandler 9
TRACE Create OnEvtHandler: num¦2
TRACE NewHandler 10
TRACE Create OnEvtHandler: num¦3
TRACE NewHandler 11
TRACE Create OnEvtHandler: foo
TRACE NewHandler 12
TRACE Create OnEvtHandler: foo
TRACE NewHandler 13
TRACE Create OnEvtHandler: foo
TRACE NewHandler 14
TRACE Create OnEvtHandler: foo
TRACE NewHandler 15
TRACE Create OnEvtHandler: bar¦*
TRACE NewHandler 16
Skipped One :: foo (49)
Skipped Two :: foo (50)
Num2Txt :: num¦2 (51)
Schau auf deine Füße :: fuß (51)
Txt2Num :: num¦1 (51)
_on 16 :: bar¦* (51)
num2num :: num¦3 (51)
Last Handler :: foo (55)
not executed :: foo (60)
.
: ⇒OnEventWorker:Skipped¦One
name: Skipped¦One
id: 12
prio: 49
pname: Skipped One
args: foo
prio: 49
.
: ⇒OnEventWorker:Skipped¦Two
name: Skipped¦Two
id: 13
prio: 50
pname: Skipped Two
args: foo
prio: 50
.
NEW: ‹ConditionalWorkSequence:17 (5)›
   : │  id: 17
   : │  call count: 0
   : │  IEVENT: bar¦foo
   : ├1╴on bar * ‹OnEventHandler›
   : │  prio: 51
   : │  step: block ‹Block›
   : │      : step: trigger $1 ‹TriggerHandler›
   : └2╴... done.
IEVENT: bar¦foo
RUN: on bar * ‹OnEventHandler›
   : prio: 51
   : step: block ‹Block›
   :     : step: trigger $1 ‹TriggerHandler›
 at: ‹ConditionalWorkSequence:17 (5)› (step 1)
 ev: IEVENT: bar¦foo
NEW: ‹ConditionalWorkSequence:18 (8)›
   : │  id: 18
   : │  call count: 0
   : │  IEVENT: foo
   : ├1╴on foo ‹OnEventHandler›
   : │  name: Skipped One
   : │  prio: 49
   : │  step: if false ‹IfStatement›
   : │  step: log ERROR This should not be executed ‹LogHandler›
   : ├2╴on foo ‹OnEventHandler›
   : │  name: Skipped Two
   : │  prio: 50
   : │  step: if true ‹IfStatement›
   : │      : step: next handler ‹OnSkip›
   : │  step: log ERROR This should also not be executed ‹LogHandler›
   : ├3╴on foo ‹OnEventHandler›
   : │  name: Last Handler
   : │  prio: 55
   : │  step: log DEBUG This is logged once ‹LogHandler›
   : ├4╴on foo ‹OnEventHandler›
   : │  name: not executed
   : │  prio: 60
   : │  step: log DEBUG This is logged once too ‹LogHandler›
   : └5╴... done.
IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: Skipped One
   : prio: 49
   : step: if false ‹IfStatement›
   : step: log ERROR This should not be executed ‹LogHandler›
 at: ‹ConditionalWorkSequence:18 (8)› (step 1)
 ev: IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: Skipped Two
   : prio: 50
   : step: if true ‹IfStatement›
   :     : step: next handler ‹OnSkip›
   : step: log ERROR This should also not be executed ‹LogHandler›
 at: ‹ConditionalWorkSequence:18 (8)› (step 2)
 ev: IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: Last Handler
   : prio: 55
   : step: log DEBUG This is logged once ‹LogHandler›
 at: ‹ConditionalWorkSequence:18 (8)› (step 3)
 ev: IEVENT: foo
DEBUG This is logged once
END: foo
END: bar¦foo
NEW: ‹ConditionalWorkSequence:19 (5)›
   : │  id: 19
   : │  call count: 0
   : │  IEVENT: bar¦foo
   : ├1╴on bar * ‹OnEventHandler›
   : │  prio: 51
   : │  step: block ‹Block›
   : │      : step: trigger $1 ‹TriggerHandler›
   : └2╴... done.
IEVENT: bar¦foo
RUN: on bar * ‹OnEventHandler›
   : prio: 51
   : step: block ‹Block›
   :     : step: trigger $1 ‹TriggerHandler›
 at: ‹ConditionalWorkSequence:19 (5)› (step 1)
 ev: IEVENT: bar¦foo
NEW: ‹ConditionalWorkSequence:20 (7)›
   : │  id: 20
   : │  call count: 0
   : │  IEVENT: foo
   : ├1╴on foo ‹OnEventHandler›
   : │  name: Skipped One
   : │  prio: 49
   : │  step: if false ‹IfStatement›
   : │  step: log ERROR This should not be executed ‹LogHandler›
   : ├2╴on foo ‹OnEventHandler›
   : │  name: Skipped Two
   : │  prio: 50
   : │  step: if true ‹IfStatement›
   : │      : step: next handler ‹OnSkip›
   : │  step: log ERROR This should also not be executed ‹LogHandler›
   : ├3╴on foo ‹OnEventHandler›
   : │  name: not executed
   : │  prio: 60
   : │  step: log DEBUG This is logged once too ‹LogHandler›
   : └4╴... done.
IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: Skipped One
   : prio: 49
   : step: if false ‹IfStatement›
   : step: log ERROR This should not be executed ‹LogHandler›
 at: ‹ConditionalWorkSequence:20 (7)› (step 1)
 ev: IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: Skipped Two
   : prio: 50
   : step: if true ‹IfStatement›
   :     : step: next handler ‹OnSkip›
   : step: log ERROR This should also not be executed ‹LogHandler›
 at: ‹ConditionalWorkSequence:20 (7)› (step 2)
 ev: IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : name: not executed
   : prio: 60
   : step: log DEBUG This is logged once too ‹LogHandler›
 at: ‹ConditionalWorkSequence:20 (7)› (step 3)
 ev: IEVENT: foo
DEBUG This is logged once too
END: foo
END: bar¦foo
Skipped One :: foo (49)
Skipped Two :: foo (50)
Num2Txt :: num¦2 (51)
Txt2Num :: num¦1 (51)
_on 16 :: bar¦* (51)
num2num :: num¦3 (51)
not executed :: foo (60)
.
TRACE locking +WAIT 3 start job ‹TriggerHandler: trigger 3›
TRACE locking -WAIT 3 start job ‹TriggerHandler: trigger 3›
TRACE locking +WAIT 4 start job ‹TriggerHandler: trigger 3›
TRACE locking -WAIT 4 start job ‹TriggerHandler: trigger 3›
TRACE locking +WAIT 5 start job ‹TriggerHandler: trigger 3›
TRACE locking -WAIT 5 start job ‹TriggerHandler: trigger 3›
TRACE locking +WAIT 6 start job ‹TriggerHandler: trigger 3›
TRACE locking -WAIT 6 start job ‹TriggerHandler: trigger 3›
TRACE locking +WAIT 7 kill job <homevent.tokize.tokizer obj>
NEW: ‹ConditionalWorkSequence:21 (5)›
   : │  id: 21
   : │  call count: 0
   : │  IEVENT: num¦3
   : ├1╴on num 3 ‹OnEventHandler›
   : │  name: num2num
   : │  prio: 51
   : │  step: do nothing ‹DoNothingHandler›
   : └2╴... done.
IEVENT: num¦3
RUN: on num 3 ‹OnEventHandler›
   : name: num2num
   : prio: 51
   : step: do nothing ‹DoNothingHandler›
 at: ‹ConditionalWorkSequence:21 (5)› (step 1)
 ev: IEVENT: num¦3
END: num¦3
NEW: ‹ConditionalWorkSequence:22 (5)›
   : │  id: 22
   : │  call count: 0
   : │  IEVENT: num¦2
   : ├1╴on num 2 ‹OnEventHandler›
   : │  name: Num2Txt
   : │  prio: 51
   : │  step: do nothing ‹DoNothingHandler›
   : └2╴... done.
IEVENT: num¦2
RUN: on num 2 ‹OnEventHandler›
   : name: Num2Txt
   : prio: 51
   : step: do nothing ‹DoNothingHandler›
 at: ‹ConditionalWorkSequence:22 (5)› (step 1)
 ev: IEVENT: num¦2
END: num¦2
NEW: ‹ConditionalWorkSequence:23 (5)›
   : │  id: 23
   : │  call count: 0
   : │  IEVENT: num¦1
   : ├1╴on num 1 ‹OnEventHandler›
   : │  name: Txt2Num
   : │  prio: 51
   : │  step: do nothing ‹DoNothingHandler›
   : └2╴... done.
IEVENT: num¦1
RUN: on num 1 ‹OnEventHandler›
   : name: Txt2Num
   : prio: 51
   : step: do nothing ‹DoNothingHandler›
 at: ‹ConditionalWorkSequence:23 (5)› (step 1)
 ev: IEVENT: num¦1
END: num¦1
NEW: ‹ConditionalWorkSequence:24 (4)›
   : │  id: 24
   : │  call count: 0
   : │  IEVENT: fuß
   : └1╴... done.
IEVENT: fuß
END: fuß
TRACE locking -WAIT 7 kill job <homevent.tokize.tokizer obj>
NEW: ‹ConditionalWorkSequence:25 (6)›
   : │  id: 25
   : │  call count: 0
   : │  EVENT: shutdown
   : └1╴... done.
EVENT: shutdown
NEW: ‹ConditionalWorkSequence:26 (4)›
   : │  id: 26
   : │  call count: 0
   : │  EVENT: module¦unload¦on_event
   : └1╴... done.
EVENT: module¦unload¦on_event
END: module¦unload¦on_event
NEW: ‹ConditionalWorkSequence:27 (4)›
   : │  id: 27
   : │  call count: 0
   : │  EVENT: module¦unload¦logging
   : └1╴... done.
EVENT: module¦unload¦logging
END: module¦unload¦logging
NEW: ‹ConditionalWorkSequence:28 (4)›
   : │  id: 28
   : │  call count: 0
   : │  EVENT: module¦unload¦trigger
   : └1╴... done.
EVENT: module¦unload¦trigger
END: module¦unload¦trigger
NEW: ‹ConditionalWorkSequence:29 (4)›
   : │  id: 29
   : │  call count: 0
   : │  EVENT: module¦unload¦bool
   : └1╴... done.
EVENT: module¦unload¦bool
END: module¦unload¦bool
NEW: ‹ConditionalWorkSequence:30 (4)›
   : │  id: 30
   : │  call count: 0
   : │  EVENT: module¦unload¦ifelse
   : └1╴... done.
EVENT: module¦unload¦ifelse
END: module¦unload¦ifelse
NEW: ‹ConditionalWorkSequence:31 (4)›
   : │  id: 31
   : │  call count: 0
   : │  EVENT: module¦unload¦data
   : └1╴... done.
EVENT: module¦unload¦data
END: module¦unload¦data
NEW: ‹ConditionalWorkSequence:32 (4)›
   : │  id: 32
   : │  call count: 0
   : │  EVENT: module¦unload¦block
   : └1╴... done.
EVENT: module¦unload¦block
END: module¦unload¦block
END: shutdown
