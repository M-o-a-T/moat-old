NEW: ‹ConditionalWorkSequence:5 (2)›
   : │  id: 5
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
TRACE Yes!
TRACE INIT sqlite {'username': 'smurf', 'trace': <function trace at 0x7fdde389e0c8>, 'database': '/tmp/homevent.smurf.db', 'dbtype': 'sqlite', 'dataport': '3306', 'host': 'sql.intern.smurf.noris.de', 'password': 'geheim'}
TRACE DoFn ('CREATE TABLE HE_State ( category varchar(50), name varchar(200), value BLOB, id INTEGER AUTO_INCREMENT PRIMARY KEY, UNIQUE (category,name))', ()) -1
TRACE DoFn ('select value from HE_State where category=? and name=?', ('state', 'foo bar')) None
TRACE RollBack  
TRACE Yes!
TRACE DoFn ('select value from HE_State where category=? and name=?', ('state', 'foo bar')) None
TRACE RollBack  
TRACE Yes!
TRACE DoFn ('select value from HE_State where category=? and name=?', ('state', 'foo bar')) None
TRACE RollBack  
TRACE Yes!
TRACE Set to ONE
TRACE DoFn ('update HE_State set value=? where category=? and name=?', ("u'one'", 'state', 'foo bar')) 0
TRACE DoFn ('insert into HE_State (category,name,value) VALUES(?,?,?)', ('state', 'foo bar', "u'one'")) 1
TRACE Commit  
NEW: ‹ConditionalWorkSequence:6 (2)›
   : │  id: 6
   : │  call count: 0
   : │  EVENT: state¦-¦one¦foo¦bar
   : └1╴... done.
EVENT: state¦-¦one¦foo¦bar
END: state¦-¦one¦foo¦bar
TRACE DoFn ('select value from HE_State where category=? and name=?', ('state', 'foo bar')) (u"u'one'",)
TRACE Commit  
TRACE Yes!
TRACE Set to TWO
TRACE DoFn ('update HE_State set value=? where category=? and name=?', ("u'two'", 'state', 'foo bar')) 1
TRACE Commit  
NEW: ‹ConditionalWorkSequence:7 (2)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: state¦one¦two¦foo¦bar
   : └1╴... done.
EVENT: state¦one¦two¦foo¦bar
END: state¦one¦two¦foo¦bar
TRACE Create OnEvtHandler: state¦*¦three¦foo¦bar
TRACE NewHandler 8
TRACE Set to THREE
TRACE DoFn ('update HE_State set value=? where category=? and name=?', ("u'three'", 'state', 'foo bar')) 1
TRACE Commit  
NEW: ‹ConditionalWorkSequence:9 (3)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: state¦two¦three¦foo¦bar
   : ├1╴on state * three foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: try ‹TryStatement›
   : │      : step: set state four foo bar ‹SetStateHandler›
   : │      : step: log DEBUG No! (No shit happened.) ‹LogHandler›
   : └2╴... done.
EVENT: state¦two¦three¦foo¦bar
RUN: on state * three foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: try ‹TryStatement›
   :     : step: set state four foo bar ‹SetStateHandler›
   :     : step: log DEBUG No! (No shit happened.) ‹LogHandler›
 at: ‹ConditionalWorkSequence:9 (3)› (step 1)
 ev: EVENT: state¦two¦three¦foo¦bar
TRACE Set to FOUR
DEBUG Yes! (Shit happens.)
END: state¦two¦three¦foo¦bar
foo bar :: three — now
.
: ‹Collected SavedState:foo¦bar›
name: foo¦bar
value: three
lock: No
last value: two
last change: now (2003-04-05 06:07:08)
persistent: yes
.
TRACE Yes!
TRACE Yes!
TRACE Yes!
TRACE Create OnEvtHandler: whatever
TRACE NewHandler 10
DEBUG End1
NEW: ‹ConditionalWorkSequence:11 (3)›
   : │  id: 11
   : │  call count: 0
   : │  IEVENT: whatever
   : ├1╴on whatever ‹OnEventHandler›
   : │  prio: 51
   : │  step: var state x foo bar ‹VarStateHandler›
   : │  step: log TRACE We got $x ‹LogHandler›
   : └2╴... done.
IEVENT: whatever
RUN: on whatever ‹OnEventHandler›
   : prio: 51
   : step: var state x foo bar ‹VarStateHandler›
   : step: log TRACE We got $x ‹LogHandler›
 at: ‹ConditionalWorkSequence:11 (3)› (step 1)
 ev: IEVENT: whatever
TRACE We got three
END: whatever
DEBUG End2
foo bar :: three — now
.
DEBUG End3
