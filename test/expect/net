EVENT: startup
NEW: <ConditionalWorkSequence:1 (4)>
   : │  EVENT: startup
   : └1╴... done.
EVENT: wait¦start¦0.2¦BAD
NEW: <ConditionalWorkSequence:2 (4)>
   : │  EVENT: wait¦start¦0.2¦BAD
   : └1╴... done.
EVENT: startup
END: startup
EVENT: wait¦start¦0.2¦BAD
END: wait¦start¦0.2¦BAD
3 
EVENT: net¦error¦foop
NEW: <ConditionalWorkSequence:3 (4)>
   : │  EVENT: net¦error¦foop
   : └1╴... done.
EVENT: net¦error¦foop
END: net¦error¦foop
EVENT: wait¦done¦0.2¦BAD
NEW: <ConditionalWorkSequence:4 (4)>
   : │  EVENT: wait¦done¦0.2¦BAD
   : └1╴... done.
EVENT: wait¦done¦0.2¦BAD
END: wait¦done¦0.2¦BAD
0 Create OnEvtHandler: net¦connect¦foo
0 NewHandler 1
0 Create OnEvtHandler: net¦connect¦baz¦zaz
0 NewHandler 2
0 Create OnEvtHandler: net¦disconnect¦foo
0 NewHandler 3
0 Create OnEvtHandler: net¦disconnect¦baz¦zaz
0 NewHandler 4
EVENT: wait¦start¦0.4¦BEFORE
NEW: <ConditionalWorkSequence:5 (4)>
   : │  EVENT: wait¦start¦0.4¦BEFORE
   : └1╴... done.
EVENT: wait¦start¦0.4¦BEFORE
END: wait¦start¦0.4¦BEFORE
EVENT: wait¦done¦0.4¦BEFORE
NEW: <ConditionalWorkSequence:6 (4)>
   : │  EVENT: wait¦done¦0.4¦BEFORE
   : └1╴... done.
EVENT: wait¦done¦0.4¦BEFORE
END: wait¦done¦0.4¦BEFORE
EVENT: wait¦start¦1.2¦AFTER
NEW: <ConditionalWorkSequence:7 (4)>
   : │  EVENT: wait¦start¦1.2¦AFTER
   : └1╴... done.
EVENT: wait¦start¦1.2¦AFTER
END: wait¦start¦1.2¦AFTER
EVENT: net¦connect¦foo
NEW: <ConditionalWorkSequence:8 (5)>
   : │  EVENT: net¦connect¦foo
   : ├1╴on net connect foo ‹OnEventHandler›
   : │  prio: 51
   : │  step: send net foo bar ‹NETsend›
   : │  step: list net ‹List›
   : │  step: list net foo ‹List›
   : │  step: del net foo ‹Del›
   : └2╴... done.
EVENT: net¦foo¦A
NEW: <ConditionalWorkSequence:9 (4)>
   : │  EVENT: net¦foo¦A
   : └1╴... done.
EVENT: net¦connect¦foo
RUN: on net connect foo ‹OnEventHandler›
   : prio: 51
   : step: send net foo bar ‹NETsend›
   : step: list net ‹List›
   : step: list net foo ‹List›
   : step: del net foo ‹Del›
 at: <ConditionalWorkSequence:8 (5)> (step 1)
 ev: EVENT: net¦connect¦foo
baz zaz :: server localhost:50345
foo :: client localhost:50333
.
type: client
host: localhost
port: 50333
connected: Yes
.
EVENT: net¦disconnect¦foo
NEW: <ConditionalWorkSequence:10 (5)>
   : │  EVENT: net¦disconnect¦foo
   : ├1╴on net disconnect foo ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE dis foo ‹LogHandler›
   : └2╴... done.
END: net¦connect¦foo
EVENT: net¦foo¦A
END: net¦foo¦A
EVENT: net¦disconnect¦foo
RUN: on net disconnect foo ‹OnEventHandler›
   : prio: 51
   : step: log TRACE dis foo ‹LogHandler›
 at: <ConditionalWorkSequence:10 (5)> (step 1)
 ev: EVENT: net¦disconnect¦foo
0 dis foo
END: net¦disconnect¦foo
EVENT: net¦connect¦baz¦zaz
NEW: <ConditionalWorkSequence:11 (5)>
   : │  EVENT: net¦connect¦baz¦zaz
   : ├1╴on net connect baz zaz ‹OnEventHandler›
   : │  prio: 51
   : │  step: send net quux ‹NETsend›
   : │  step: list net baz zaz ‹List›
   : │  step: del net baz zaz ‹Del›
   : └2╴... done.
EVENT: net¦connect¦baz¦zaz
RUN: on net connect baz zaz ‹OnEventHandler›
   : prio: 51
   : step: send net quux ‹NETsend›
   : step: list net baz zaz ‹List›
   : step: del net baz zaz ‹Del›
 at: <ConditionalWorkSequence:11 (5)> (step 1)
 ev: EVENT: net¦connect¦baz¦zaz
type: server
host: localhost
port: 50345
connected: Yes
.
EVENT: net¦disconnect¦baz¦zaz
NEW: <ConditionalWorkSequence:12 (5)>
   : │  EVENT: net¦disconnect¦baz¦zaz
   : ├1╴on net disconnect baz zaz ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE dis baz zaz ‹LogHandler›
   : └2╴... done.
END: net¦connect¦baz¦zaz
EVENT: net¦disconnect¦baz¦zaz
RUN: on net disconnect baz zaz ‹OnEventHandler›
   : prio: 51
   : step: log TRACE dis baz zaz ‹LogHandler›
 at: <ConditionalWorkSequence:12 (5)> (step 1)
 ev: EVENT: net¦disconnect¦baz¦zaz
0 dis baz zaz
END: net¦disconnect¦baz¦zaz
EVENT: wait¦done¦1.2¦AFTER
NEW: <ConditionalWorkSequence:13 (4)>
   : │  EVENT: wait¦done¦1.2¦AFTER
   : └1╴... done.
EVENT: wait¦done¦1.2¦AFTER
END: wait¦done¦1.2¦AFTER
0 ending
.
EVENT: shutdown
NEW: <ConditionalWorkSequence:14 (6)>
   : │  EVENT: shutdown
   : └1╴... done.
EVENT: shutdown
END: shutdown
