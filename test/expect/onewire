99 EVENT: startup
NEW: <ConditionalWorkSequence:1 (4)>
   : │  EVENT: startup
   : └1╴... done.
99 EVENT: startup
99 END: startup
99 add ‹IfStatement if¦exists¦file¦onewire2›
99 add ‹Include include¦onewire2›
99 add ‹Include include¦test/onewire2›
99 add ‹Load load¦bool›
99 EVENT: module¦load¦bool
NEW: <ConditionalWorkSequence:2 (4)>
   : │  EVENT: module¦load¦bool
   : └1╴... done.
99 EVENT: module¦load¦bool
99 END: module¦load¦bool
99 add ‹Load load¦ifelse›
99 add ‹Load load¦logging›
99 EVENT: module¦load¦logging
NEW: <ConditionalWorkSequence:3 (4)>
   : │  EVENT: module¦load¦logging
   : └1╴... done.
99 EVENT: module¦load¦logging
99 END: module¦load¦logging
99 add ‹Load load¦block›
99 add ‹Load load¦trigger›
99 EVENT: module¦load¦trigger
NEW: <ConditionalWorkSequence:4 (4)>
   : │  EVENT: module¦load¦trigger
   : └1╴... done.
99 EVENT: module¦load¦trigger
99 END: module¦load¦trigger
99 add ‹Load load¦wait›
99 EVENT: module¦load¦wait
NEW: <ConditionalWorkSequence:5 (4)>
   : │  EVENT: module¦load¦wait
   : └1╴... done.
99 EVENT: module¦load¦wait
99 END: module¦load¦wait
99 add ‹Load load¦onewire›
99 EVENT: module¦load¦onewire
NEW: <ConditionalWorkSequence:6 (4)>
   : │  EVENT: module¦load¦onewire
   : └1╴... done.
99 EVENT: module¦load¦onewire
99 END: module¦load¦onewire
99 add ‹Load load¦on_event›
99 EVENT: module¦load¦on_event
NEW: <ConditionalWorkSequence:7 (4)>
   : │  EVENT: module¦load¦on_event
   : └1╴... done.
99 EVENT: module¦load¦on_event
99 END: module¦load¦on_event
99 add ‹Load load¦errors›
99 EVENT: module¦load¦errors
NEW: <ConditionalWorkSequence:8 (4)>
   : │  EVENT: module¦load¦errors
   : └1╴... done.
99 EVENT: module¦load¦errors
99 END: module¦load¦errors
99 Create OnEvtHandler: onewire¦scanned¦A¦*¦*¦*
99 add ‹Del del¦on¦scanned›
99 add ‹OWFSvar var¦onewire¦X¦_DEV_¦_ATTR_›
99 add ‹TriggerHandler trigger¦thermo¦$X›
99 add ‹Del del¦wait¦yawn›
99 NewHandler 1
NEW: <ConditionalWorkSequence:48 (5)>
   : ├1╴on onewire scanned A * * * ‹OnEventHandler›
   : │  name: scanned
   : │  prio: 51
   : │  step: del on scanned ‹Del›
   : │  step: var onewire X _DEV_ _ATTR_ ‹OWFSvar›
   : │  step: trigger thermo $X ‹TriggerHandler›
   : │  step: del wait yawn ‹Del›
   : └2╴... done.
RUN: on onewire scanned A * * * ‹OnEventHandler›
   : name: scanned
   : prio: 51
   : step: del on scanned ‹Del›
   : step: var onewire X _DEV_ _ATTR_ ‹OWFSvar›
   : step: trigger thermo $X ‹TriggerHandler›
   : step: del wait yawn ‹Del›
 at: <ConditionalWorkSequence:48 (5)> (step 1)
99 EVENT: thermo¦DATA
NEW: <ConditionalWorkSequence:49 (4)>
   : │  EVENT: thermo¦DATA
   : └1╴... done.
99 EVENT: wait¦cancel¦×××¦yawn
NEW: <ConditionalWorkSequence:_VAL_ (4)>
   : │  EVENT: wait¦cancel¦×××¦yawn
   : └1╴... done.
99 EVENT: thermo¦DATA
99 END: thermo¦DATA
99 EVENT: wait¦cancel¦×××¦yawn
99 END: wait¦cancel¦×××¦yawn
99 NOW: do nothing
99 Drop OWFS bus A
99 EVENT: wait¦start¦×××¦END
NEW: <ConditionalWorkSequence:51 (4)>
   : │  EVENT: wait¦start¦×××¦END
   : └1╴... done.
99 EVENT: wait¦start¦×××¦END
99 END: wait¦start¦×××¦END
99 EVENT: wait¦done¦×××¦END
NEW: <ConditionalWorkSequence:52 (4)>
   : │  EVENT: wait¦done¦×××¦END
   : └1╴... done.
99 EVENT: wait¦done¦×××¦END
99 END: wait¦done¦×××¦END
