NEW: <ConditionalWorkSequence:8 (4)>
   : │  id: 8
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
0 Create OnEvtHandler: timeslot¦begin¦foo¦bar
0 NewHandler 9
0 Create OnEvtHandler: timeslot¦end¦foo¦bar
0 NewHandler 10
.
name: foo bar
run: off
interval: 10
duration: 2.0
.
1 Yes
1 Yes
NEW: <ConditionalWorkSequence:11 (4)>
   : │  id: 11
   : │  call count: 0
   : │  EVENT: wait¦start¦9.5¦A¦before
   : └1╴... done.
EVENT: wait¦start¦9.5¦A¦before
END: wait¦start¦9.5¦A¦before
NEW: <ConditionalWorkSequence:12 (4)>
   : │  id: 12
   : │  call count: 0
   : │  EVENT: wait¦done¦9.5¦A¦before
   : └1╴... done.
EVENT: wait¦done¦9.5¦A¦before
END: wait¦done¦9.5¦A¦before
name: foo bar
run: next
interval: 10
duration: 2.0
next: 0.5 sec
.
1 Yes
1 Yes
NEW: <ConditionalWorkSequence:13 (4)>
   : │  id: 13
   : │  call count: 0
   : │  EVENT: wait¦start¦10.5¦B¦during
   : └1╴... done.
EVENT: wait¦start¦10.5¦B¦during
END: wait¦start¦10.5¦B¦during
NEW: <ConditionalWorkSequence:14 (5)>
   : │  id: 14
   : │  call count: 0
   : │  EVENT: timeslot¦begin¦foo¦bar
   : ├1╴on timeslot begin foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: wait GOT EVENT A ‹WaitHandler›
   : │  step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │  step: if equal $X pre ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: if in timeslot foo bar ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: async ‹Async›
   : │      : step: wait AFTER EVENT A ‹WaitHandler›
   : │      : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │      : step: log TRACE got it $X ‹LogHandler›
   : │      : step: if equal $X during ‹IfStatement›
   : │      :     : step: log DEBUG Yes ‹LogHandler›
   : │      : step: wait GOT EVENT AX ‹WaitHandler›
   : │      : step: if in timeslot foo bar ‹IfStatement›
   : │      :     : step: log DEBUG Yes ‹LogHandler›
   : └2╴... done.
EVENT: timeslot¦begin¦foo¦bar
RUN: on timeslot begin foo bar ‹OnEventHandler›
   : prio: 51
   : step: wait GOT EVENT A ‹WaitHandler›
   : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : step: if equal $X pre ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: if in timeslot foo bar ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: async ‹Async›
   :     : step: wait AFTER EVENT A ‹WaitHandler›
   :     : step: var timeslot X foo bar ‹VarTimeslotHandler›
   :     : step: log TRACE got it $X ‹LogHandler›
   :     : step: if equal $X during ‹IfStatement›
   :     :     : step: log DEBUG Yes ‹LogHandler›
   :     : step: wait GOT EVENT AX ‹WaitHandler›
   :     : step: if in timeslot foo bar ‹IfStatement›
   :     :     : step: log DEBUG Yes ‹LogHandler›
 at: <ConditionalWorkSequence:14 (5)> (step 1)
 ev: EVENT: timeslot¦begin¦foo¦bar
NEW: <ConditionalWorkSequence:15 (4)>
   : │  id: 15
   : │  call count: 0
   : │  EVENT: wait¦start¦10.3¦GOT¦EVENT¦A
   : └1╴... done.
EVENT: wait¦start¦10.3¦GOT¦EVENT¦A
END: wait¦start¦10.3¦GOT¦EVENT¦A
NEW: <ConditionalWorkSequence:16 (4)>
   : │  id: 16
   : │  call count: 0
   : │  EVENT: wait¦done¦10.3¦GOT¦EVENT¦A
   : └1╴... done.
EVENT: wait¦done¦10.3¦GOT¦EVENT¦A
END: wait¦done¦10.3¦GOT¦EVENT¦A
1 Yes
1 Yes
END: timeslot¦begin¦foo¦bar
NEW: <ConditionalWorkSequence:17 (4)>
   : │  id: 17
   : │  call count: 0
   : │  EVENT: wait¦start¦10.8¦AFTER¦EVENT¦A
   : └1╴... done.
EVENT: wait¦start¦10.8¦AFTER¦EVENT¦A
END: wait¦start¦10.8¦AFTER¦EVENT¦A
NEW: <ConditionalWorkSequence:18 (4)>
   : │  id: 18
   : │  call count: 0
   : │  EVENT: wait¦done¦10.5¦B¦during
   : └1╴... done.
EVENT: wait¦done¦10.5¦B¦during
END: wait¦done¦10.5¦B¦during
name: foo bar
run: during
interval: 10
duration: 2.0
last: 0.5 sec
next: 1.5 sec
slot: 0.75
.
1 Yes
1 Yes
NEW: <ConditionalWorkSequence:19 (4)>
   : │  id: 19
   : │  call count: 0
   : │  EVENT: wait¦start¦12.5¦C¦after
   : └1╴... done.
EVENT: wait¦start¦12.5¦C¦after
END: wait¦start¦12.5¦C¦after
NEW: <ConditionalWorkSequence:20 (4)>
   : │  id: 20
   : │  call count: 0
   : │  EVENT: wait¦done¦10.8¦AFTER¦EVENT¦A
   : └1╴... done.
EVENT: wait¦done¦10.8¦AFTER¦EVENT¦A
END: wait¦done¦10.8¦AFTER¦EVENT¦A
0 got it during
1 Yes
NEW: <ConditionalWorkSequence:21 (4)>
   : │  id: 21
   : │  call count: 0
   : │  EVENT: wait¦start¦10.9¦GOT¦EVENT¦AX
   : └1╴... done.
EVENT: wait¦start¦10.9¦GOT¦EVENT¦AX
END: wait¦start¦10.9¦GOT¦EVENT¦AX
NEW: <ConditionalWorkSequence:22 (4)>
   : │  id: 22
   : │  call count: 0
   : │  EVENT: wait¦done¦10.9¦GOT¦EVENT¦AX
   : └1╴... done.
EVENT: wait¦done¦10.9¦GOT¦EVENT¦AX
END: wait¦done¦10.9¦GOT¦EVENT¦AX
1 Yes
NEW: <ConditionalWorkSequence:23 (5)>
   : │  id: 23
   : │  call count: 0
   : │  EVENT: timeslot¦end¦foo¦bar
   : ├1╴on timeslot end foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: wait GOT EVENT B ‹WaitHandler›
   : │  step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │  step: if equal $X post ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: if in timeslot foo bar ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: async ‹Async›
   : │      : step: wait AFTER EVENT B ‹WaitHandler›
   : │      : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │      : step: log TRACE got it $X ‹LogHandler›
   : │      : step: if equal $X next ‹IfStatement›
   : │      :     : step: log DEBUG Yes ‹LogHandler›
   : │      : step: wait GOT EVENT AX ‹WaitHandler›
   : │      : step: if in timeslot foo bar ‹IfStatement›
   : │      :     : step: log DEBUG No9ax ‹LogHandler›
   : └2╴... done.
EVENT: timeslot¦end¦foo¦bar
RUN: on timeslot end foo bar ‹OnEventHandler›
   : prio: 51
   : step: wait GOT EVENT B ‹WaitHandler›
   : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : step: if equal $X post ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: if in timeslot foo bar ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: async ‹Async›
   :     : step: wait AFTER EVENT B ‹WaitHandler›
   :     : step: var timeslot X foo bar ‹VarTimeslotHandler›
   :     : step: log TRACE got it $X ‹LogHandler›
   :     : step: if equal $X next ‹IfStatement›
   :     :     : step: log DEBUG Yes ‹LogHandler›
   :     : step: wait GOT EVENT AX ‹WaitHandler›
   :     : step: if in timeslot foo bar ‹IfStatement›
   :     :     : step: log DEBUG No9ax ‹LogHandler›
 at: <ConditionalWorkSequence:23 (5)> (step 1)
 ev: EVENT: timeslot¦end¦foo¦bar
NEW: <ConditionalWorkSequence:24 (4)>
   : │  id: 24
   : │  call count: 0
   : │  EVENT: wait¦start¦12.1¦GOT¦EVENT¦B
   : └1╴... done.
EVENT: wait¦start¦12.1¦GOT¦EVENT¦B
END: wait¦start¦12.1¦GOT¦EVENT¦B
NEW: <ConditionalWorkSequence:25 (4)>
   : │  id: 25
   : │  call count: 0
   : │  EVENT: wait¦done¦12.1¦GOT¦EVENT¦B
   : └1╴... done.
EVENT: wait¦done¦12.1¦GOT¦EVENT¦B
END: wait¦done¦12.1¦GOT¦EVENT¦B
1 Yes
1 Yes
END: timeslot¦end¦foo¦bar
NEW: <ConditionalWorkSequence:26 (4)>
   : │  id: 26
   : │  call count: 0
   : │  EVENT: wait¦start¦12.6¦AFTER¦EVENT¦B
   : └1╴... done.
EVENT: wait¦start¦12.6¦AFTER¦EVENT¦B
END: wait¦start¦12.6¦AFTER¦EVENT¦B
NEW: <ConditionalWorkSequence:27 (4)>
   : │  id: 27
   : │  call count: 0
   : │  EVENT: wait¦done¦12.5¦C¦after
   : └1╴... done.
EVENT: wait¦done¦12.5¦C¦after
END: wait¦done¦12.5¦C¦after
name: foo bar
run: next
interval: 10
duration: 2.0
last: 2.5 sec
next: 7.5 sec
.
1 Yes
1 Yes
NEW: <ConditionalWorkSequence:28 (4)>
   : │  id: 28
   : │  call count: 0
   : │  EVENT: wait¦start¦20.5¦D¦during¦again
   : └1╴... done.
EVENT: wait¦start¦20.5¦D¦during¦again
END: wait¦start¦20.5¦D¦during¦again
NEW: <ConditionalWorkSequence:29 (4)>
   : │  id: 29
   : │  call count: 0
   : │  EVENT: wait¦done¦12.6¦AFTER¦EVENT¦B
   : └1╴... done.
EVENT: wait¦done¦12.6¦AFTER¦EVENT¦B
END: wait¦done¦12.6¦AFTER¦EVENT¦B
0 got it next
1 Yes
NEW: <ConditionalWorkSequence:30 (4)>
   : │  id: 30
   : │  call count: 0
   : │  EVENT: wait¦start¦12.7¦GOT¦EVENT¦AX
   : └1╴... done.
EVENT: wait¦start¦12.7¦GOT¦EVENT¦AX
END: wait¦start¦12.7¦GOT¦EVENT¦AX
NEW: <ConditionalWorkSequence:31 (4)>
   : │  id: 31
   : │  call count: 0
   : │  EVENT: wait¦done¦12.7¦GOT¦EVENT¦AX
   : └1╴... done.
EVENT: wait¦done¦12.7¦GOT¦EVENT¦AX
END: wait¦done¦12.7¦GOT¦EVENT¦AX
1 Yes
NEW: <ConditionalWorkSequence:32 (5)>
   : │  id: 32
   : │  call count: 0
   : │  EVENT: timeslot¦begin¦foo¦bar
   : ├1╴on timeslot begin foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: wait GOT EVENT A ‹WaitHandler›
   : │  step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │  step: if equal $X pre ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: if in timeslot foo bar ‹IfStatement›
   : │      : step: log DEBUG Yes ‹LogHandler›
   : │  step: async ‹Async›
   : │      : step: wait AFTER EVENT A ‹WaitHandler›
   : │      : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : │      : step: log TRACE got it $X ‹LogHandler›
   : │      : step: if equal $X during ‹IfStatement›
   : │      :     : step: log DEBUG Yes ‹LogHandler›
   : │      : step: wait GOT EVENT AX ‹WaitHandler›
   : │      : step: if in timeslot foo bar ‹IfStatement›
   : │      :     : step: log DEBUG Yes ‹LogHandler›
   : └2╴... done.
EVENT: timeslot¦begin¦foo¦bar
RUN: on timeslot begin foo bar ‹OnEventHandler›
   : prio: 51
   : step: wait GOT EVENT A ‹WaitHandler›
   : step: var timeslot X foo bar ‹VarTimeslotHandler›
   : step: if equal $X pre ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: if in timeslot foo bar ‹IfStatement›
   :     : step: log DEBUG Yes ‹LogHandler›
   : step: async ‹Async›
   :     : step: wait AFTER EVENT A ‹WaitHandler›
   :     : step: var timeslot X foo bar ‹VarTimeslotHandler›
   :     : step: log TRACE got it $X ‹LogHandler›
   :     : step: if equal $X during ‹IfStatement›
   :     :     : step: log DEBUG Yes ‹LogHandler›
   :     : step: wait GOT EVENT AX ‹WaitHandler›
   :     : step: if in timeslot foo bar ‹IfStatement›
   :     :     : step: log DEBUG Yes ‹LogHandler›
 at: <ConditionalWorkSequence:32 (5)> (step 1)
 ev: EVENT: timeslot¦begin¦foo¦bar
NEW: <ConditionalWorkSequence:33 (4)>
   : │  id: 33
   : │  call count: 0
   : │  EVENT: wait¦start¦20.3¦GOT¦EVENT¦A
   : └1╴... done.
EVENT: wait¦start¦20.3¦GOT¦EVENT¦A
END: wait¦start¦20.3¦GOT¦EVENT¦A
NEW: <ConditionalWorkSequence:34 (4)>
   : │  id: 34
   : │  call count: 0
   : │  EVENT: wait¦done¦20.3¦GOT¦EVENT¦A
   : └1╴... done.
EVENT: wait¦done¦20.3¦GOT¦EVENT¦A
END: wait¦done¦20.3¦GOT¦EVENT¦A
1 Yes
1 Yes
END: timeslot¦begin¦foo¦bar
NEW: <ConditionalWorkSequence:35 (4)>
   : │  id: 35
   : │  call count: 0
   : │  EVENT: wait¦start¦20.8¦AFTER¦EVENT¦A
   : └1╴... done.
EVENT: wait¦start¦20.8¦AFTER¦EVENT¦A
END: wait¦start¦20.8¦AFTER¦EVENT¦A
NEW: <ConditionalWorkSequence:36 (4)>
   : │  id: 36
   : │  call count: 0
   : │  EVENT: wait¦done¦20.5¦D¦during¦again
   : └1╴... done.
EVENT: wait¦done¦20.5¦D¦during¦again
END: wait¦done¦20.5¦D¦during¦again
name: foo bar
run: during
interval: 10
duration: 2.0
last: 0.5 sec
next: 1.5 sec
slot: 0.75
.
1 Yes
1 Yes
1 Yes
1 Yes
name: foo bar
run: off
interval: 10
duration: 2.0
last: 0.5 sec
.
1 Yes
NEW: <ConditionalWorkSequence:37 (7)>
   : │  id: 37
   : │  call count: 0
   : │  EVENT: shutdown
   : └1╴... done.
EVENT: shutdown
NEW: <ConditionalWorkSequence:38 (4)>
   : │  id: 38
   : │  call count: 0
   : │  EVENT: wait¦cancel¦20.8¦AFTER¦EVENT¦A
   : └1╴... done.
EVENT: wait¦cancel¦20.8¦AFTER¦EVENT¦A
END: wait¦cancel¦20.8¦AFTER¦EVENT¦A
END: shutdown
Waiter ‹wait› was cancelled
NEW: <WorkSequence:39 (4)>
   : │  id: 39
   : │  call count: 0
   : │  Waiter ‹wait› was cancelled
   : └1╴... done.
Waiter ‹wait› was cancelled
END: WaitCancelled
