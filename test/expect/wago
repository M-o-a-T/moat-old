NEW: ‹ConditionalWorkSequence:5 (2)›
   : │  id: 5
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
NEW: ‹ConditionalWorkSequence:6 (2)›
   : │  id: 6
   : │  call count: 0
   : │  EVENT: module¦load¦bool
   : └1╴... done.
EVENT: module¦load¦bool
END: module¦load¦bool
NEW: ‹ConditionalWorkSequence:7 (2)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: module¦load¦logging
   : └1╴... done.
EVENT: module¦load¦logging
END: module¦load¦logging
NEW: ‹ConditionalWorkSequence:8 (2)›
   : │  id: 8
   : │  call count: 0
   : │  EVENT: module¦load¦trigger
   : └1╴... done.
EVENT: module¦load¦trigger
END: module¦load¦trigger
NEW: ‹ConditionalWorkSequence:9 (2)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: module¦load¦wait
   : └1╴... done.
EVENT: module¦load¦wait
END: module¦load¦wait
NEW: ‹ConditionalWorkSequence:10 (2)›
   : │  id: 10
   : │  call count: 0
   : │  EVENT: module¦load¦on_event
   : └1╴... done.
EVENT: module¦load¦on_event
END: module¦load¦on_event
NEW: ‹ConditionalWorkSequence:11 (2)›
   : │  id: 11
   : │  call count: 0
   : │  EVENT: module¦load¦wago
   : └1╴... done.
EVENT: module¦load¦wago
END: module¦load¦wago
NEW: ‹ConditionalWorkSequence:12 (2)›
   : │  id: 12
   : │  call count: 0
   : │  EVENT: module¦load¦monitor
   : └1╴... done.
EVENT: module¦load¦monitor
END: module¦load¦monitor
TRACE Create OnEvtHandler: wago¦connect¦test
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test
TRACE NewHandler 13
NEW: ‹ConditionalWorkSequence:14 (2)›
   : │  id: 14
   : │  call count: 0
   : │  EVENT: wait¦start¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦start¦0.1¦_wait¦1
END: wait¦start¦0.1¦_wait¦1
TRACE conn setting up WAGOqueue test
TRACE conn connected WAGOqueue test
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 2›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 3›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 4›
TRACE wago recv '* WAGO ready.'
TRACE msg recv msg ‹MsgIncoming: msg:'WAGO ready.' type:MT_INFO prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'WAGO ready.' type:MT_INFO prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'WAGO ready.' type:MT_INFO prio:2›
TRACE !got UP_EVENT test
NEW: ‹ConditionalWorkSequence:15 (3)›
   : │  id: 15
   : │  call count: 0
   : │  EVENT: wago¦connect¦test
   : ├1╴on wago connect test ‹OnEventHandler›
   : │  prio: 51
   : │  step: async ‹Async›
   : │      : step: send wago test Dc ‹WAGOraw›
   : │      : step: send wago test DI ‹WAGOraw›
   : │      : step: send wago test Dr ‹WAGOraw›
   : └2╴... done.
EVENT: wago¦connect¦test
RUN: on wago connect test ‹OnEventHandler›
   : prio: 51
   : step: async ‹Async›
   :     : step: send wago test Dc ‹WAGOraw›
   :     : step: send wago test DI ‹WAGOraw›
   :     : step: send wago test Dr ‹WAGOraw›
 at: ‹ConditionalWorkSequence:15 (3)› (step 1)
 ev: EVENT: wago¦connect¦test
END: wago¦connect¦test
TRACE msg recv= MINE ‹WAGOinitMsg 5›
TRACE msg states at run connected connecting
TRACE NotConn [[], [‹WAGOmonitorsMsg 8›], [‹WAGOkeepaliveMsg 9›], []]
TRACE conn setstate connecting connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonitorsMsg a›
TRACE wago send 'm'
TRACE msg send result RECV_AGAIN
TRACE msg states at run connected connected
TRACE msg blocked by ‹WAGOmonitorsMsg b›
TRACE wago recv '=Monitors:'
TRACE wago recv '.'
TRACE msg recv msg ‹MsgIncoming: msg:['Monitors:'] type:MT_MULTILINE prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:['Monitors:'] type:MT_MULTILINE prio:2›
TRACE msg recv test ‹MsgIncoming: msg:['Monitors:'] type:MT_MULTILINE prio:2›
TRACE msg recv= MINE ‹WAGOmonitorsMsg c›
TRACE msg states at run connected connected
TRACE msg send ‹WAGOkeepaliveMsg d›
TRACE wago send 'Da0.5'
TRACE msg send result RECV_AGAIN
TRACE msg send ‹WAGOrawRun f›
TRACE wago send u'Dc'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+25 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:25 type:MT_IND_ACK prio:2›
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:25 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:25 type:MT_IND_ACK prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 10›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 11›
TRACE msg recv= MINE ‹WAGOrawRun 12›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 13›
TRACE wago send u'DI'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 14›
TRACE msg recv= MINE ‹WAGOrawRun 15›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 16›
TRACE wago send u'Dr'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 17›
TRACE msg recv= MINE ‹WAGOrawRun 18›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:38.709479 _wait¦1: Forced timer done
NEW: ‹ConditionalWorkSequence:16 (2)›
   : │  id: 16
   : │  call count: 0
   : │  EVENT: wait¦done¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦done¦0.1¦_wait¦1
END: wait¦done¦0.1¦_wait¦1
NEW: ‹ConditionalWorkSequence:17 (2)›
   : │  id: 17
   : │  call count: 0
   : │  EVENT: output¦set¦ho¦hey¦foo¦baz
   : └1╴... done.
EVENT: output¦set¦ho¦hey¦foo¦baz
END: output¦set¦ho¦hey¦foo¦baz
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputRun 2:1 val=True›
TRACE wago send 's 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+Set.'
TRACE msg recv msg ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 19›
TRACE msg recv= MINE ‹WAGOoutputRun 2:1 val=True›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOinputRun 1:1›
TRACE wago send 'i 1 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+0'
TRACE msg recv msg ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 1a›
TRACE msg recv= MINE ‹WAGOinputRun 1:1›
TRACE msg states at run connected connected
DEBUG in_1 whynot
DEBUG> in_1 whynot
TRACE msg states at run connected connected
TRACE msg send ‹WAGOinputRun 1:1›
TRACE wago send 'i 1 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+0'
TRACE msg recv msg ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 1b›
TRACE msg recv= MINE ‹WAGOinputRun 1:1›
TRACE msg states at run connected connected
DEBUG Yes
DEBUG> Yes
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 1c›
TRACE wago send u'Ds'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 1d›
TRACE msg recv= MINE ‹WAGOrawRun 1e›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOinputRun 1:1›
TRACE wago send 'i 1 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+1'
TRACE msg recv msg ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 1f›
TRACE msg recv= MINE ‹WAGOinputRun 1:1›
TRACE msg states at run connected connected
DEBUG in_2 why
DEBUG> in_2 why
TRACE msg states at run connected connected
TRACE msg send ‹WAGOinputRun 1:1›
TRACE wago send 'i 1 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+1'
TRACE msg recv msg ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 20›
TRACE msg recv= MINE ‹WAGOinputRun 1:1›
TRACE msg states at run connected connected
DEBUG Yes
DEBUG> Yes
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 21›
TRACE wago send u'DS'
TRACE msg send result RECV_AGAIN
NEW: ‹ConditionalWorkSequence:18 (2)›
   : │  id: 18
   : │  call count: 0
   : │  EVENT: wait¦start¦0.4¦timed¦set¦A
   : └1╴... done.
EVENT: wait¦start¦0.4¦timed¦set¦A
END: wait¦start¦0.4¦timed¦set¦A
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 22›
TRACE msg recv= MINE ‹WAGOrawRun 23›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:19 (2)›
   : │  id: 19
   : │  call count: 0
   : │  EVENT: output¦set¦hey¦ho¦foo¦baz
   : └1╴... done.
EVENT: output¦set¦hey¦ho¦foo¦baz
END: output¦set¦hey¦ho¦foo¦baz
TRACE msg states at run connected connected
TRACE msg send ‹WAGOtimedOutputRun 2:1 val=False tm=2.0 sec id=None›
TRACE wago send 'c 2 1 1.999'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+26 Cleared, monitor started.'
TRACE msg recv msg ‹MsgIncoming: msg:'Cleared, monitor started.' msgid:26 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Cleared, monitor started.' msgid:26 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Cleared, monitor started.' msgid:26 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 24›
TRACE msg recv= RECV_AGAIN ‹WAGOtimedOutputRun 2:1 val=False tm=2.0 sec id=26›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:38.959068 timed¦set¦A: Forced timer done
NEW: ‹ConditionalWorkSequence:20 (2)›
   : │  id: 20
   : │  call count: 0
   : │  EVENT: wait¦done¦0.4¦timed¦set¦A
   : └1╴... done.
EVENT: wait¦done¦0.4¦timed¦set¦A
END: wait¦done¦0.4¦timed¦set¦A
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 25›
TRACE wago send u'DC'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 26›
TRACE msg recv= NOT_MINE ‹WAGOtimedOutputRun 2:1 val=False tm=1.8 sec id=26›
TRACE msg recv= MINE ‹WAGOrawRun 27›
TRACE msg states at run connected connected
foo baz 1 :: foo¦baz¦1:None
.
NEW: ‹ConditionalWorkSequence:21 (2)›
   : │  id: 21
   : │  call count: 0
   : │  EVENT: wait¦start¦1.4¦timed¦set¦B
   : └1╴... done.
EVENT: wait¦start¦1.4¦timed¦set¦B
END: wait¦start¦1.4¦timed¦set¦B
TRACE wago recv '!25 PING 1'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 1' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 1' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 1' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 29›
TRACE msg states at run connected connected
TRACE wago recv '!25 PING 2'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 2' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 2' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 2' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 2b›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:39.968169 timed¦set¦B: Forced timer done
NEW: ‹ConditionalWorkSequence:22 (2)›
   : │  id: 22
   : │  call count: 0
   : │  EVENT: wait¦done¦1.4¦timed¦set¦B
   : └1╴... done.
EVENT: wait¦done¦1.4¦timed¦set¦B
END: wait¦done¦1.4¦timed¦set¦B
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputInRun 2:1›
TRACE wago send 'I 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+0'
TRACE msg recv msg ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 2c›
TRACE msg recv= NOT_MINE ‹WAGOtimedOutputRun 2:1 val=False tm=0.8 sec id=26›
TRACE msg recv= MINE ‹WAGOoutputInRun 2:1›
TRACE msg states at run connected connected
DEBUG out_1 ho
DEBUG> out_1 ho
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputInRun 2:1›
TRACE wago send 'I 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+0'
TRACE msg recv msg ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 2d›
TRACE msg recv= NOT_MINE ‹WAGOtimedOutputRun 2:1 val=False tm=0.8 sec id=26›
TRACE msg recv= MINE ‹WAGOoutputInRun 2:1›
TRACE msg states at run connected connected
DEBUG Yes
DEBUG> Yes
NEW: ‹ConditionalWorkSequence:23 (2)›
   : │  id: 23
   : │  call count: 0
   : │  EVENT: wait¦start¦2.4¦timed¦set¦C
   : └1╴... done.
EVENT: wait¦start¦2.4¦timed¦set¦C
END: wait¦start¦2.4¦timed¦set¦C
TRACE wago recv '!25 PING 3'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 3' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 3' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 3' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 2f›
TRACE msg states at run connected connected
TRACE wago recv '!25 PING 4'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 4' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 4' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 4' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 31›
TRACE msg states at run connected connected
TRACE wago recv '!26 TRIGGER'
TRACE msg recv msg ‹MsgIncoming: msg:'TRIGGER' msgid:26 type:MT_IND prio:2›
TRACE wago recv '!-26 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:26 type:MT_IND_NAK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'TRIGGER' msgid:26 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'TRIGGER' msgid:26 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 32›
TRACE msg recv= RECV_AGAIN ‹WAGOtimedOutputRun 2:1 val=False tm=now id=26›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:26 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:26 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 33›
TRACE msg recv= MINE ‹WAGOtimedOutputRun 2:1 val=False tm=now id=26›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:24 (2)›
   : │  id: 24
   : │  call count: 0
   : │  EVENT: output¦set¦ho¦ho¦foo¦baz
   : └1╴... done.
EVENT: output¦set¦ho¦ho¦foo¦baz
END: output¦set¦ho¦ho¦foo¦baz
DEBUG released
DEBUG> released
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 34›
TRACE wago send u'DS'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 35›
TRACE msg recv= MINE ‹WAGOrawRun 36›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:40.978362 timed¦set¦C: Forced timer done
NEW: ‹ConditionalWorkSequence:25 (2)›
   : │  id: 25
   : │  call count: 0
   : │  EVENT: wait¦done¦2.4¦timed¦set¦C
   : └1╴... done.
EVENT: wait¦done¦2.4¦timed¦set¦C
END: wait¦done¦2.4¦timed¦set¦C
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputInRun 2:1›
TRACE wago send 'I 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+1'
TRACE msg recv msg ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 37›
TRACE msg recv= MINE ‹WAGOoutputInRun 2:1›
TRACE msg states at run connected connected
DEBUG out_2 hey
DEBUG> out_2 hey
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputInRun 2:1›
TRACE wago send 'I 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+1'
TRACE msg recv msg ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 38›
TRACE msg recv= MINE ‹WAGOoutputInRun 2:1›
TRACE msg states at run connected connected
DEBUG Yes
DEBUG> Yes
NEW: ‹ConditionalWorkSequence:26 (2)›
   : │  id: 26
   : │  call count: 0
   : │  EVENT: wait¦start¦2.5¦_wait¦5
   : └1╴... done.
EVENT: wait¦start¦2.5¦_wait¦5
END: wait¦start¦2.5¦_wait¦5
TRACE 2014-11-17 09:08:41.089543 _wait¦5: Forced timer done
NEW: ‹ConditionalWorkSequence:27 (2)›
   : │  id: 27
   : │  call count: 0
   : │  EVENT: wait¦done¦2.5¦_wait¦5
   : └1╴... done.
EVENT: wait¦done¦2.5¦_wait¦5
END: wait¦done¦2.5¦_wait¦5
NEW: ‹ConditionalWorkSequence:28 (2)›
   : │  id: 28
   : │  call count: 0
   : │  EVENT: output¦set¦hey¦ho¦foo¦baz
   : └1╴... done.
EVENT: output¦set¦hey¦ho¦foo¦baz
END: output¦set¦hey¦ho¦foo¦baz
TRACE msg states at run connected connected
TRACE msg send ‹WAGOoutputRun 2:1 val=False›
TRACE wago send 'c 2 1'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+Cleared.'
TRACE msg recv msg ‹MsgIncoming: msg:'Cleared.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Cleared.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Cleared.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 39›
TRACE msg recv= MINE ‹WAGOoutputRun 2:1 val=False›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:29 (2)›
   : │  id: 29
   : │  call count: 0
   : │  EVENT: wait¦start¦3.0¦_wait¦6
   : └1╴... done.
EVENT: wait¦start¦3.0¦_wait¦6
END: wait¦start¦3.0¦_wait¦6
TRACE wago recv '!25 PING 5'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 5' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 5' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 5' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 3b›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:41.608198 _wait¦6: Forced timer done
NEW: ‹ConditionalWorkSequence:30 (2)›
   : │  id: 30
   : │  call count: 0
   : │  EVENT: wait¦done¦3.0¦_wait¦6
   : └1╴... done.
EVENT: wait¦done¦3.0¦_wait¦6
END: wait¦done¦3.0¦_wait¦6
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 3c›
TRACE wago send u'Dc'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 3d›
TRACE msg recv= MINE ‹WAGOrawRun 3e›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 3f›
TRACE wago send u'd 0.01'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+Loop timer changed.'
TRACE msg recv msg ‹MsgIncoming: msg:'Loop timer changed.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Loop timer changed.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Loop timer changed.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 40›
TRACE msg recv= MINE ‹WAGOrawRun 41›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦count¦up off››
TRACE wago send 'm# 1 1 + 1.000'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+27 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:27 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:27 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:27 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 42›
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦up off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:31 (2)›
   : │  id: 31
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦count¦up
   : └1╴... done.
EVENT: monitor¦start¦test¦count¦up
END: monitor¦start¦test¦count¦up
TRACE monitor Start run test¦count¦up
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦count¦down off››
TRACE wago send 'm# 1 1 - 1.000'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+28 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:28 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:28 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:28 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 43›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦down off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:32 (2)›
   : │  id: 32
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦count¦down
   : └1╴... done.
EVENT: monitor¦start¦test¦count¦down
END: monitor¦start¦test¦count¦down
TRACE monitor Start run test¦count¦down
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦count¦both off››
TRACE wago send 'm# 1 1 * 1.000'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+29 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:29 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:29 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:29 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 44›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦both off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:33 (2)›
   : │  id: 33
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦count¦both
   : └1╴... done.
EVENT: monitor¦start¦test¦count¦both
END: monitor¦start¦test¦count¦both
TRACE monitor Start run test¦count¦both
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦report¦up off››
TRACE wago send 'm+ 1 1 +'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!25 PING 6'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 6' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 6' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 6' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 46›
TRACE msg states at run connected connected
TRACE wago recv '!+30 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:30 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:30 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:30 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 47›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦up off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:34 (2)›
   : │  id: 34
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦report¦up
   : └1╴... done.
EVENT: monitor¦start¦test¦report¦up
END: monitor¦start¦test¦report¦up
TRACE monitor Start run test¦report¦up
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦report¦down off››
TRACE wago send 'm+ 1 1 -'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+31 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:31 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:31 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:31 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 48›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦down off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:35 (2)›
   : │  id: 35
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦report¦down
   : └1╴... done.
EVENT: monitor¦start¦test¦report¦down
END: monitor¦start¦test¦report¦down
TRACE monitor Start run test¦report¦down
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonRun ‹WAGOmon test¦report¦both off››
TRACE wago send 'm+ 1 1 *'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!+32 monitor created'
TRACE msg recv msg ‹MsgIncoming: msg:'monitor created' msgid:32 type:MT_IND_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:32 type:MT_IND_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'monitor created' msgid:32 type:MT_IND_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 49›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦both off››
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:36 (2)›
   : │  id: 36
   : │  call count: 0
   : │  EVENT: monitor¦start¦test¦report¦both
   : └1╴... done.
EVENT: monitor¦start¦test¦report¦both
END: monitor¦start¦test¦report¦both
TRACE monitor Start run test¦report¦both
NEW: ‹ConditionalWorkSequence:37 (2)›
   : │  id: 37
   : │  call count: 0
   : │  EVENT: wait¦start¦3.2¦_wait¦7
   : └1╴... done.
EVENT: wait¦start¦3.2¦_wait¦7
END: wait¦start¦3.2¦_wait¦7
TRACE 2014-11-17 09:08:41.789872 _wait¦7: Forced timer done
NEW: ‹ConditionalWorkSequence:38 (2)›
   : │  id: 38
   : │  call count: 0
   : │  EVENT: wait¦done¦3.2¦_wait¦7
   : └1╴... done.
EVENT: wait¦done¦3.2¦_wait¦7
END: wait¦done¦3.2¦_wait¦7
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 4a›
TRACE wago send u'Ds'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 4b›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOrawRun 4c›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:39 (2)›
   : │  id: 39
   : │  call count: 0
   : │  EVENT: wait¦start¦3.3¦_wait¦8
   : └1╴... done.
EVENT: wait¦start¦3.3¦_wait¦8
END: wait¦start¦3.3¦_wait¦8
TRACE wago recv '!32 H'
TRACE msg recv msg ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE wago recv '!30 H'
TRACE msg recv msg ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 4d›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE monitor filter [1.0] on test¦report¦both
TRACE monitor End run test¦report¦both
NEW: ‹ConditionalWorkSequence:40 (2)›
   : │  id: 40
   : │  call count: 0
   : │  EVENT: monitor¦value¦1.0¦test¦report¦both
   : └1╴... done.
EVENT: monitor¦value¦1.0¦test¦report¦both
END: monitor¦value¦1.0¦test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦both on 1.0››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 4e›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE monitor filter [1.0] on test¦report¦up
TRACE monitor End run test¦report¦up
NEW: ‹ConditionalWorkSequence:41 (2)›
   : │  id: 41
   : │  call count: 0
   : │  EVENT: monitor¦value¦1.0¦test¦report¦up
   : └1╴... done.
EVENT: monitor¦value¦1.0¦test¦report¦up
END: monitor¦value¦1.0¦test¦report¦up
TRACE monitor Stop run test¦report¦up
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:41.901640 _wait¦8: Forced timer done
NEW: ‹ConditionalWorkSequence:42 (2)›
   : │  id: 42
   : │  call count: 0
   : │  EVENT: wait¦done¦3.3¦_wait¦8
   : └1╴... done.
EVENT: wait¦done¦3.3¦_wait¦8
END: wait¦done¦3.3¦_wait¦8
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 4f›
TRACE wago send u'Dc'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 50›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both on 1.0››
TRACE msg recv= MINE ‹WAGOrawRun 51›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:43 (2)›
   : │  id: 43
   : │  call count: 0
   : │  EVENT: wait¦start¦3.4¦_wait¦9
   : └1╴... done.
EVENT: wait¦start¦3.4¦_wait¦9
END: wait¦start¦3.4¦_wait¦9
TRACE wago recv '!32 L'
TRACE msg recv msg ‹MsgIncoming: msg:'L' msgid:32 type:MT_IND prio:2›
TRACE wago recv '!31 L'
TRACE msg recv msg ‹MsgIncoming: msg:'L' msgid:31 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'L' msgid:32 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'L' msgid:32 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 52›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
NEW: ‹ConditionalWorkSequence:44 (2)›
   : │  id: 44
   : │  call count: 0
   : │  EVENT: monitor¦error¦overrun¦test¦report¦both
   : └1╴... done.
EVENT: monitor¦error¦overrun¦test¦report¦both
END: monitor¦error¦overrun¦test¦report¦both
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦both on 1.0››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'L' msgid:31 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'L' msgid:31 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 53›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE monitor filter [1.0] on test¦report¦down
TRACE monitor End run test¦report¦down
NEW: ‹ConditionalWorkSequence:45 (2)›
   : │  id: 45
   : │  call count: 0
   : │  EVENT: monitor¦value¦1.0¦test¦report¦down
   : └1╴... done.
EVENT: monitor¦value¦1.0¦test¦report¦down
END: monitor¦value¦1.0¦test¦report¦down
TRACE monitor Stop run test¦report¦down
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦down on 1.0››
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:42.013927 _wait¦9: Forced timer done
NEW: ‹ConditionalWorkSequence:46 (2)›
   : │  id: 46
   : │  call count: 0
   : │  EVENT: wait¦done¦3.5¦_wait¦9
   : └1╴... done.
EVENT: wait¦done¦3.5¦_wait¦9
END: wait¦done¦3.5¦_wait¦9
TRACE msg states at run connected connected
TRACE msg send ‹WAGOrawRun 54›
TRACE wago send u'Ds'
TRACE msg send result RECV_AGAIN
TRACE wago recv '+OK'
TRACE msg recv msg ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 55›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down on 1.0››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both on 1.0››
TRACE msg recv= MINE ‹WAGOrawRun 56›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:47 (2)›
   : │  id: 47
   : │  call count: 0
   : │  EVENT: wait¦start¦4.5¦_wait¦10
   : └1╴... done.
EVENT: wait¦start¦4.5¦_wait¦10
END: wait¦start¦4.5¦_wait¦10
TRACE wago recv '!32 H'
TRACE msg recv msg ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE wago recv '!30 H'
TRACE msg recv msg ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'H' msgid:32 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 57›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down on 1.0››
NEW: ‹ConditionalWorkSequence:48 (2)›
   : │  id: 48
   : │  call count: 0
   : │  EVENT: monitor¦error¦overrun¦test¦report¦both
   : └1╴... done.
EVENT: monitor¦error¦overrun¦test¦report¦both
END: monitor¦error¦overrun¦test¦report¦both
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦both on 1.0››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'H' msgid:30 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 58›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
NEW: ‹ConditionalWorkSequence:49 (2)›
   : │  id: 49
   : │  call count: 0
   : │  EVENT: monitor¦error¦overrun¦test¦report¦up
   : └1╴... done.
EVENT: monitor¦error¦overrun¦test¦report¦up
END: monitor¦error¦overrun¦test¦report¦up
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦report¦up on 1.0››
TRACE msg states at run connected connected
TRACE 2003-04-05 06:07:16.925175 : Fake timer done
TRACE 2003-04-05 06:07:16.925175 : Fake timer done
TRACE monitor Start run test¦report¦both
TRACE 2003-04-05 06:07:16.950176 : Fake timer done
TRACE 2003-04-05 06:07:16.950176 : Fake timer done
TRACE monitor Start run test¦report¦up
TRACE wago recv '!25 PING 7'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 7' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 7' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 7' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 5a›
TRACE msg states at run connected connected
TRACE 2003-04-05 06:07:17.300183 : Fake timer done
TRACE 2003-04-05 06:07:17.300183 : Fake timer done
TRACE monitor Start run test¦report¦down
TRACE wago recv '!25 PING 8'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 8' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 8' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 8' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 5c›
TRACE msg states at run connected connected
TRACE wago recv '!29 3'
TRACE msg recv msg ‹MsgIncoming: msg:'3' msgid:29 type:MT_IND prio:2›
TRACE wago recv '!27 2'
TRACE msg recv msg ‹MsgIncoming: msg:'2' msgid:27 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'3' msgid:29 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'3' msgid:29 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 5d›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE monitor filter [3.0] on test¦count¦both
TRACE monitor End run test¦count¦both
NEW: ‹ConditionalWorkSequence:50 (2)›
   : │  id: 50
   : │  call count: 0
   : │  EVENT: monitor¦value¦3.0¦test¦count¦both
   : └1╴... done.
EVENT: monitor¦value¦3.0¦test¦count¦both
END: monitor¦value¦3.0¦test¦count¦both
TRACE monitor Stop run test¦count¦both
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦both on 3.0››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'2' msgid:27 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'2' msgid:27 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 5e›
TRACE monitor filter [2.0] on test¦count¦up
TRACE monitor End run test¦count¦up
NEW: ‹ConditionalWorkSequence:51 (2)›
   : │  id: 51
   : │  call count: 0
   : │  EVENT: monitor¦value¦2.0¦test¦count¦up
   : └1╴... done.
EVENT: monitor¦value¦2.0¦test¦count¦up
END: monitor¦value¦2.0¦test¦count¦up
TRACE monitor Stop run test¦count¦up
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦up on 2.0››
TRACE msg states at run connected connected
TRACE wago recv '!28 1'
TRACE msg recv msg ‹MsgIncoming: msg:'1' msgid:28 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' msgid:28 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'1' msgid:28 type:MT_IND prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 5f›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up on 2.0››
TRACE monitor filter [1.0] on test¦count¦down
TRACE monitor End run test¦count¦down
NEW: ‹ConditionalWorkSequence:52 (2)›
   : │  id: 52
   : │  call count: 0
   : │  EVENT: monitor¦value¦1.0¦test¦count¦down
   : └1╴... done.
EVENT: monitor¦value¦1.0¦test¦count¦down
END: monitor¦value¦1.0¦test¦count¦down
TRACE monitor Stop run test¦count¦down
TRACE msg recv= RECV_AGAIN ‹WAGOmonRun ‹WAGOmon test¦count¦down on 1.0››
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:43.022370 _wait¦10: Forced timer done
NEW: ‹ConditionalWorkSequence:53 (2)›
   : │  id: 53
   : │  call count: 0
   : │  EVENT: wait¦done¦4.5¦_wait¦10
   : └1╴... done.
EVENT: wait¦done¦4.5¦_wait¦10
END: wait¦done¦4.5¦_wait¦10
test count both :: Wait ‹now›
test count down :: Wait ‹0.5 sec›
test count up :: Wait ‹now›
test report both :: Run ‹2.5 sec›
test report down :: Run ‹2.2 sec›
test report up :: Run ‹2.5 sec›
.
: ‹WAGOmon test¦count¦up on 2.0›
name: test¦count¦up
device: wago test 1 1
value: 2.0
up: Wait
time: ‹now›
steps: 1 / 1 / None
data: 2.0
mode: count
timespec: 1
level: up
msgid: 27
last msg: monitor created
.
: ‹WAGOmon test¦count¦down on 1.0›
name: test¦count¦down
device: wago test 1 1
value: 1.0
up: Wait
time: ‹0.5 sec›
steps: 1 / 1 / None
data: 1.0
mode: count
timespec: 1
level: down
msgid: 28
last msg: monitor created
.
: ‹WAGOmon test¦count¦both on 3.0›
name: test¦count¦both
device: wago test 1 1
value: 3.0
up: Wait
time: ‹now›
steps: 1 / 1 / None
data: 3.0
mode: count
timespec: 1
level: both
msgid: 29
last msg: monitor created
.
: ‹WAGOmon test¦report¦up run 1›
name: test¦report¦up
device: wago test 1 1
value: 1.0
up: Run
time: ‹2.5 sec›
steps: 1 / 1 / None
mode: report
level: up
msgid: 30
last msg: monitor created
.
: ‹WAGOmon test¦report¦down run 1›
name: test¦report¦down
device: wago test 1 1
value: 1.0
up: Run
time: ‹2.2 sec›
steps: 1 / 1 / None
mode: report
level: down
msgid: 31
last msg: monitor created
.
: ‹WAGOmon test¦report¦both run 1›
name: test¦report¦both
device: wago test 1 1
value: 1.0
up: Run
time: ‹2.5 sec›
steps: 1 / 1 / None
mode: report
level: both
msgid: 32
last msg: monitor created
.
DEBUG YesM 1.0 2.0 3.0
DEBUG> YesM 1.0 2.0 3.0
DEBUG No RH 1.0
DEBUG> No RH 1.0
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 60 msgid=27›
TRACE wago send 'm- 27'
TRACE msg send result RECV_AGAIN
TRACE 2003-04-05 06:07:19.500226 : Fake timer done
TRACE 2003-04-05 06:07:19.500226 : Fake timer done
TRACE monitor Start run test¦count¦both
TRACE 2003-04-05 06:07:19.550227 : Fake timer done
TRACE 2003-04-05 06:07:19.550227 : Fake timer done
TRACE monitor Start run test¦count¦up
TRACE wago recv '!-27 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:27 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 27 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 27 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:27 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:27 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 61›
TRACE monitor End run test¦count¦up
TRACE monitor Stop run test¦count¦up
TRACE wago recv '!25 PING 9'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 9' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:20.050232 : Fake timer done
TRACE 2003-04-05 06:07:20.050232 : Fake timer done
TRACE monitor Start run test¦count¦down
TRACE 2003-04-05 06:07:20.700238 : Fake timer done
NEW: ‹ConditionalWorkSequence:54 (2)›
   : │  id: 54
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦count¦up
   : └1╴... done.
EVENT: monitor¦stop¦test¦count¦up
END: monitor¦stop¦test¦count¦up
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦count¦up off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 27 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 27 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 62›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOmonStop 63 msgid=27›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 9' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 9' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 65›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 66 msgid=28›
TRACE wago send 'm- 28'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!-28 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:28 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 28 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 28 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:28 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:28 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 67›
TRACE monitor End run test¦count¦down
TRACE monitor Stop run test¦count¦down
TRACE wago recv '!25 PING 10'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 10' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:21.700248 : Fake timer done
NEW: ‹ConditionalWorkSequence:55 (2)›
   : │  id: 55
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦count¦down
   : └1╴... done.
EVENT: monitor¦stop¦test¦count¦down
END: monitor¦stop¦test¦count¦down
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦count¦down off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 28 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 28 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 68›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOmonStop 69 msgid=28›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 10' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 10' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 6b›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 6c msgid=29›
TRACE wago send 'm- 29'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!-29 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:29 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 29 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 29 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:29 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:29 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 6d›
TRACE monitor End run test¦count¦both
TRACE monitor Stop run test¦count¦both
TRACE wago recv '!25 PING 11'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 11' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:22.700258 : Fake timer done
NEW: ‹ConditionalWorkSequence:56 (2)›
   : │  id: 56
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦count¦both
   : └1╴... done.
EVENT: monitor¦stop¦test¦count¦both
END: monitor¦stop¦test¦count¦both
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦count¦both off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 29 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 29 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 6e›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOmonStop 6f msgid=29›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 11' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 11' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 71›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 72 msgid=30›
TRACE wago send 'm- 30'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!-30 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:30 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 30 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 30 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:30 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:30 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 73›
TRACE monitor End run test¦report¦up
TRACE monitor Stop run test¦report¦up
TRACE wago recv '!25 PING 12'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 12' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:23.700268 : Fake timer done
NEW: ‹ConditionalWorkSequence:57 (2)›
   : │  id: 57
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦report¦up
   : └1╴... done.
EVENT: monitor¦stop¦test¦report¦up
END: monitor¦stop¦test¦report¦up
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦report¦up off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 30 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 30 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 74›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down run 1››
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOmonStop 75 msgid=30›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 12' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 12' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 77›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 78 msgid=31›
TRACE wago send 'm- 31'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!-31 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:31 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 31 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 31 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:31 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:31 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 79›
TRACE monitor End run test¦report¦down
TRACE monitor Stop run test¦report¦down
TRACE wago recv '!25 PING 13'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 13' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:24.700278 : Fake timer done
NEW: ‹ConditionalWorkSequence:58 (2)›
   : │  id: 58
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦report¦down
   : └1╴... done.
EVENT: monitor¦stop¦test¦report¦down
END: monitor¦stop¦test¦report¦down
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦report¦down off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 31 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 31 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 7a›
TRACE msg recv= NOT_MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both run 1››
TRACE msg recv= MINE ‹WAGOmonStop 7b msgid=31›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 13' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 13' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 7d›
TRACE msg states at run connected connected
TRACE msg states at run connected connected
TRACE msg send ‹WAGOmonStop 7e msgid=32›
TRACE wago send 'm- 32'
TRACE msg send result RECV_AGAIN
TRACE wago recv '!-32 Deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Deleted.' msgid:32 type:MT_IND_NAK prio:2›
TRACE wago recv '+Monitor 32 deleted.'
TRACE msg recv msg ‹MsgIncoming: msg:'Monitor 32 deleted.' type:MT_ACK prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:32 type:MT_IND_NAK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Deleted.' msgid:32 type:MT_IND_NAK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 7f›
TRACE monitor End run test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE wago recv '!25 PING 14'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 14' msgid:25 type:MT_IND prio:2›
TRACE 2003-04-05 06:07:25.700288 : Fake timer done
NEW: ‹ConditionalWorkSequence:59 (2)›
   : │  id: 59
   : │  call count: 0
   : │  EVENT: monitor¦stop¦test¦report¦both
   : └1╴... done.
EVENT: monitor¦stop¦test¦report¦both
END: monitor¦stop¦test¦report¦both
TRACE msg recv= MINE ‹WAGOmonRun ‹WAGOmon test¦report¦both off››
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 32 deleted.' type:MT_ACK prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'Monitor 32 deleted.' type:MT_ACK prio:2›
TRACE msg recv= NOT_MINE ‹WAGOkeepaliveMsg 80›
TRACE msg recv= MINE ‹WAGOmonStop 81 msgid=32›
TRACE msg states at run connected connected
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 14' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 14' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 83›
TRACE msg states at run connected connected
NEW: ‹ConditionalWorkSequence:60 (2)›
   : │  id: 60
   : │  call count: 0
   : │  EVENT: wait¦start¦7.6¦_wait¦11
   : └1╴... done.
EVENT: wait¦start¦7.6¦_wait¦11
END: wait¦start¦7.6¦_wait¦11
TRACE wago recv '!25 PING 15'
TRACE msg recv msg ‹MsgIncoming: msg:'PING 15' msgid:25 type:MT_IND prio:2›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 15' msgid:25 type:MT_IND prio:2›
TRACE msg recv test ‹MsgIncoming: msg:'PING 15' msgid:25 type:MT_IND prio:2›
TRACE msg recv= RECV_AGAIN ‹WAGOkeepaliveMsg 85›
TRACE msg states at run connected connected
TRACE 2014-11-17 09:08:46.183490 _wait¦11: Forced timer done
NEW: ‹ConditionalWorkSequence:61 (2)›
   : │  id: 61
   : │  call count: 0
   : │  EVENT: wait¦done¦7.6¦_wait¦11
   : └1╴... done.
EVENT: wait¦done¦7.6¦_wait¦11
END: wait¦done¦7.6¦_wait¦11
test :: wago localhost:59069
.
type: wago
host: localhost
port: 59069
.
test :: ‹WAGOqueue:test connected›
.
: ‹WAGOqueue:test connected›
name: test
queue: 0
state: connected
state since: -17.9 sec (2003-04-05 06:07:08)
sent: (0, 37)
received: (0, 70)
processed: (0, 37)
last_sent : ‹WAGOmonStop 86 msgid=32›
          priority: 2
          timeout: 2
          result: Monitor 32 deleted.
last_sent_at: -1.2 sec (2003-04-05 06:07:24.70)
conn attempts: 0
conn timer: 3
out_queued: 0
channel type: wago
        host: localhost
        port: 59069
msg recv 2 1 : ‹WAGOkeepaliveMsg 87›
             priority: 2
             status: pending
             last: now
             id: 25
.
DEBUG Yes
DEBUG> Yes
DEBUG Yes
DEBUG> Yes
DEBUG Yes
DEBUG> Yes
TRACE !got DOWN_EVENT test
NEW: ‹ConditionalWorkSequence:62 (2)›
   : │  id: 62
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test
   : └1╴... done.
EVENT: wago¦disconnect¦test
END: wago¦disconnect¦test
TRACE conn deleted WAGOqueue test
DEBUG now we test a nonexistent port
DEBUG> now we test a nonexistent port
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
NEW: ‹ConditionalWorkSequence:63 (2)›
   : │  id: 63
   : │  call count: 0
   : │  EVENT: wait¦start¦8.6¦poll¦nonexist
   : └1╴... done.
EVENT: wait¦start¦8.6¦poll¦nonexist
END: wait¦start¦8.6¦poll¦nonexist
TRACE !got NOT_UP_EVENT test nonexist
NEW: ‹ConditionalWorkSequence:64 (2)›
   : │  id: 64
   : │  call count: 0
   : │  EVENT: wago¦error¦test¦nonexist
   : └1╴... done.
EVENT: wago¦error¦test¦nonexist
END: wago¦error¦test¦nonexist
ERROR Setting up
ERROR [Errno 111] Connection refused
ERROR> Setting up
ERROR> [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.200
TRACE 2014-11-17 09:08:46.444930 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
TRACE !got NOT_UP_EVENT test nonexist
NEW: ‹ConditionalWorkSequence:65 (2)›
   : │  id: 65
   : │  call count: 0
   : │  EVENT: wago¦error¦test¦nonexist
   : └1╴... done.
EVENT: wago¦error¦test¦nonexist
END: wago¦error¦test¦nonexist
ERROR Setting up
ERROR [Errno 111] Connection refused
ERROR> Setting up
ERROR> [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.320
TRACE 2014-11-17 09:08:46.797910 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
TRACE !got NOT_UP_EVENT test nonexist
NEW: ‹ConditionalWorkSequence:66 (2)›
   : │  id: 66
   : │  call count: 0
   : │  EVENT: wago¦error¦test¦nonexist
   : └1╴... done.
EVENT: wago¦error¦test¦nonexist
END: wago¦error¦test¦nonexist
ERROR Setting up
ERROR [Errno 111] Connection refused
ERROR> Setting up
ERROR> [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.500
TRACE 2014-11-17 09:08:47.220435 poll¦nonexist: Forced timer done
NEW: ‹ConditionalWorkSequence:67 (2)›
   : │  id: 67
   : │  call count: 0
   : │  EVENT: wait¦done¦8.7¦poll¦nonexist
   : └1╴... done.
EVENT: wait¦done¦8.7¦poll¦nonexist
END: wait¦done¦8.7¦poll¦nonexist
: ‹WAGOqueue:test¦nonexist connecting›
name: test¦nonexist
queue: 0
state: connecting
state since: -1.2 sec (2003-04-05 06:07:27.47)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 3
conn timer: 0.5
out_queued: 0
.
DEBUG now we test a port that always EOFs
DEBUG> now we test a port that always EOFs
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦closing
NEW: ‹ConditionalWorkSequence:68 (2)›
   : │  id: 68
   : │  call count: 0
   : │  EVENT: wait¦start¦9.7¦poll¦closing
   : └1╴... done.
EVENT: wait¦start¦9.7¦poll¦closing
END: wait¦start¦9.7¦poll¦closing
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 89›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 8a›
TRACE !got DOWN_EVENT test closing
NEW: ‹ConditionalWorkSequence:69 (2)›
   : │  id: 69
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦closing
   : └1╴... done.
EVENT: wago¦disconnect¦test¦closing
END: wago¦disconnect¦test¦closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.120
TRACE 2014-11-17 09:08:47.317937 : Forced timer done
TRACE 2014-11-17 09:08:47.341240 : Forced timer done
TRACE 2014-11-17 09:08:47.383288 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE wago Queue WAGOmonitorsMsg
TRACE conn connecting WAGOqueue test¦closing
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 8c›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 8d›
TRACE !got DOWN_EVENT test closing
NEW: ‹ConditionalWorkSequence:70 (2)›
   : │  id: 70
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦closing
   : └1╴... done.
EVENT: wago¦disconnect¦test¦closing
END: wago¦disconnect¦test¦closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.192
TRACE 2014-11-17 09:08:47.451576 : Forced timer done
TRACE 2014-11-17 09:08:47.616840 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE wago Queue WAGOmonitorsMsg
TRACE conn connecting WAGOqueue test¦closing
TRACE 2014-11-17 09:08:47.621407 : Forced timer done
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 8f›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 90›
TRACE !got DOWN_EVENT test closing
NEW: ‹ConditionalWorkSequence:71 (2)›
   : │  id: 71
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦closing
   : └1╴... done.
EVENT: wago¦disconnect¦test¦closing
END: wago¦disconnect¦test¦closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.307
TRACE 2014-11-17 09:08:47.834061 : Forced timer done
TRACE 2014-11-17 09:08:47.945244 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE wago Queue WAGOmonitorsMsg
TRACE conn connecting WAGOqueue test¦closing
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 92›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 93›
TRACE !got DOWN_EVENT test closing
NEW: ‹ConditionalWorkSequence:72 (2)›
   : │  id: 72
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦closing
   : └1╴... done.
EVENT: wago¦disconnect¦test¦closing
END: wago¦disconnect¦test¦closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.492
TRACE 2014-11-17 09:08:48.191055 : Forced timer done
TRACE 2014-11-17 09:08:48.258835 poll¦closing: Forced timer done
NEW: ‹ConditionalWorkSequence:73 (2)›
   : │  id: 73
   : │  call count: 0
   : │  EVENT: wait¦done¦9.7¦poll¦closing
   : └1╴... done.
EVENT: wait¦done¦9.7¦poll¦closing
END: wait¦done¦9.7¦poll¦closing
: ‹WAGOqueue:test¦closing ReOpen›
name: test¦closing
queue: 0
state: ReOpen
state since: -0.8 sec (2003-04-05 06:07:30.80)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 4
conn timer: 0.5
out_queued: 1
msg send 1 1 : ‹WAGOmonitorsMsg 94›
             priority: 1
             status: pending
msg recv 0 1 : ‹WAGOinitMsg 95›
             priority: 0
.
DEBUG now we test a port that does not answer
DEBUG> now we test a port that does not answer
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦no_answer
NEW: ‹ConditionalWorkSequence:74 (2)›
   : │  id: 74
   : │  call count: 0
   : │  EVENT: wait¦start¦10.7¦poll¦no_answer
   : └1╴... done.
EVENT: wait¦start¦10.7¦poll¦no_answer
END: wait¦start¦10.7¦poll¦no_answer
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 97›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 98›
TRACE 2014-11-17 09:08:48.478609 : Forced timer done
TRACE 2014-11-17 09:08:48.518983 : Forced timer done
TRACE !got DOWN_EVENT test no_answer
NEW: ‹ConditionalWorkSequence:75 (2)›
   : │  id: 75
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦no_answer
   : └1╴... done.
EVENT: wago¦disconnect¦test¦no_answer
END: wago¦disconnect¦test¦no_answer
TRACE conn ReOpen WAGOqueue test¦no_answer
TRACE conn setstate connecting waiting: wait 0.120
TRACE 2014-11-17 09:08:48.649077 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE wago Queue WAGOmonitorsMsg
TRACE conn connecting WAGOqueue test¦no_answer
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 9a›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 9b›
TRACE 2014-11-17 09:08:48.887833 : Forced timer done
TRACE !got DOWN_EVENT test no_answer
NEW: ‹ConditionalWorkSequence:76 (2)›
   : │  id: 76
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦no_answer
   : └1╴... done.
EVENT: wago¦disconnect¦test¦no_answer
END: wago¦disconnect¦test¦no_answer
TRACE conn ReOpen WAGOqueue test¦no_answer
TRACE conn setstate connecting waiting: wait 0.192
TRACE 2014-11-17 09:08:49.094362 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE wago Queue WAGOmonitorsMsg
TRACE conn connecting WAGOqueue test¦no_answer
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE msg states at run connected connecting
TRACE NotConn [[], [], [], []]
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 9d›
TRACE msg states at run connected connecting
TRACE msg blocked by ‹WAGOinitMsg 9e›
TRACE 2014-11-17 09:08:49.295829 poll¦no_answer: Forced timer done
NEW: ‹ConditionalWorkSequence:77 (2)›
   : │  id: 77
   : │  call count: 0
   : │  EVENT: wait¦done¦10.7¦poll¦no_answer
   : └1╴... done.
EVENT: wait¦done¦10.7¦poll¦no_answer
END: wait¦done¦10.7¦poll¦no_answer
: ‹WAGOqueue:test¦no_answer connected›
name: test¦no_answer
queue: 0
state: connected
state since: -0.4 sec (2003-04-05 06:07:33.30)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 2
conn timer: 0.3072
out_queued: 1
channel type: wago
        host: localhost
        port: 59068
msg send 1 1 : ‹WAGOmonitorsMsg 9f›
             priority: 1
             status: pending
msg recv 0 1 : ‹WAGOinitMsg a0›
             priority: 0
.
TRACE !got DOWN_EVENT test no_answer
NEW: ‹ConditionalWorkSequence:78 (2)›
   : │  id: 78
   : │  call count: 0
   : │  EVENT: wago¦disconnect¦test¦no_answer
   : └1╴... done.
EVENT: wago¦disconnect¦test¦no_answer
END: wago¦disconnect¦test¦no_answer
TRACE conn deleted WAGOqueue test¦no_answer
NEW: ‹ConditionalWorkSequence:79 (2)›
   : │  id: 79
   : │  call count: 0
   : │  EVENT: wait¦start¦27.7¦poll¦end
   : └1╴... done.
EVENT: wait¦start¦27.7¦poll¦end
END: wait¦start¦27.7¦poll¦end
TRACE 2014-11-17 09:08:49.320503 : Forced timer done
TRACE 2003-04-05 06:07:35.676345 poll¦end: Fake timer done
NEW: ‹ConditionalWorkSequence:80 (2)›
   : │  id: 80
   : │  call count: 0
   : │  EVENT: wait¦done¦27.7¦poll¦end
   : └1╴... done.
EVENT: wait¦done¦27.7¦poll¦end
END: wait¦done¦27.7¦poll¦end
