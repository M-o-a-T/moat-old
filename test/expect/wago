NEW: ‹ConditionalWorkSequence:7 (4)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
0 +WAIT 1 start job ‹Collected Parser:n1›
0 -WAIT 1 start job ‹Collected Parser:n1›
0 +WAIT 2 start job <homevent.tokize.tokizer obj>
0 -WAIT 2 start job <homevent.tokize.tokizer obj>
NEW: ‹ConditionalWorkSequence:8 (4)›
   : │  id: 8
   : │  call count: 0
   : │  EVENT: module¦load¦bool
   : └1╴... done.
EVENT: module¦load¦bool
END: module¦load¦bool
NEW: ‹ConditionalWorkSequence:9 (4)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: module¦load¦logging
   : └1╴... done.
EVENT: module¦load¦logging
END: module¦load¦logging
NEW: ‹ConditionalWorkSequence:10 (4)›
   : │  id: 10
   : │  call count: 0
   : │  EVENT: module¦load¦trigger
   : └1╴... done.
EVENT: module¦load¦trigger
END: module¦load¦trigger
NEW: ‹ConditionalWorkSequence:11 (4)›
   : │  id: 11
   : │  call count: 0
   : │  EVENT: module¦load¦wait
   : └1╴... done.
EVENT: module¦load¦wait
END: module¦load¦wait
NEW: ‹ConditionalWorkSequence:12 (4)›
   : │  id: 12
   : │  call count: 0
   : │  EVENT: module¦load¦on_event
   : └1╴... done.
EVENT: module¦load¦on_event
END: module¦load¦on_event
NEW: ‹ConditionalWorkSequence:13 (4)›
   : │  id: 13
   : │  call count: 0
   : │  EVENT: module¦load¦wago
   : └1╴... done.
EVENT: module¦load¦wago
END: module¦load¦wago
0 +WAIT 3 start job ‹Collected OutLogger:OutLogger¦x2›
0 -WAIT 3 start job ‹Collected OutLogger:OutLogger¦x2›
0 +WAIT 4 start job ‹Async async›
0 -WAIT 4 start job ‹Async async›
0 Create OnEvtHandler: foo¦baba
0 NewHandler 14
0 +WAIT 5 start job ‹Waiter _wait¦1 ??›
0 -WAIT 5 start job ‹Waiter _wait¦1 ??›
NEW: ‹ConditionalWorkSequence:15 (4)›
   : │  id: 15
   : │  call count: 0
   : │  EVENT: wait¦start¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦start¦0.1¦_wait¦1
END: wait¦start¦0.1¦_wait¦1
0 +WAIT 6 start job ‹WAGOqueue:test New›
0 -WAIT 6 start job ‹WAGOqueue:test New›
0 +WAIT 7 start job ‹WAGOqueue:test New›
0 -WAIT 7 start job ‹WAGOqueue:test New›
0 conn connecting WAGOqueue test
0 +WAIT 8 start job ‹WAGOchannel:‹Collected _MsgForwarder:test››
0 -WAIT 8 start job ‹WAGOchannel:‹Collected _MsgForwarder:test››
0 conn setting up WAGOqueue test
0 conn connected WAGOqueue test
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'WAGO ready.' type:MT_INFO prio:1›
0 msg recv test ‹MsgIncoming: msg:'WAGO ready.' type:MT_INFO prio:1›
0 msg recv= MINE
NEW: ‹ConditionalWorkSequence:16 (4)›
   : │  id: 16
   : │  call count: 0
   : │  EVENT: wait¦done¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦done¦0.1¦_wait¦1
END: wait¦done¦0.1¦_wait¦1
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:1›
0 msg recv= MINE
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:1›
0 msg recv= MINE
1 portstate whynot
DEBUG> portstate whynot
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'0' type:MT_ACK prio:1›
0 msg recv= MINE
1 Yes
DEBUG> Yes
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'OK' type:MT_ACK prio:1›
0 msg recv= MINE
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:1›
0 msg recv= MINE
1 portstate why
DEBUG> portstate why
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'1' type:MT_ACK prio:1›
0 msg recv= MINE
1 Yes
DEBUG> Yes
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'Set.' type:MT_ACK prio:1›
0 msg recv= MINE
0 conn incoming WAGOqueue test ‹MsgIncoming: msg:'Cleared.' type:MT_ACK prio:1›
0 msg recv test ‹MsgIncoming: msg:'Cleared.' type:MT_ACK prio:1›
0 msg recv= MINE
0 +WAIT 9 start job ‹Waiter _wait¦2 ??›
0 -WAIT 9 start job ‹Waiter _wait¦2 ??›
NEW: ‹ConditionalWorkSequence:17 (4)›
   : │  id: 17
   : │  call count: 0
   : │  EVENT: wait¦start¦1.6¦_wait¦2
   : └1╴... done.
EVENT: wait¦start¦1.6¦_wait¦2
END: wait¦start¦1.6¦_wait¦2
NEW: ‹ConditionalWorkSequence:18 (4)›
   : │  id: 18
   : │  call count: 0
   : │  EVENT: wait¦done¦1.6¦_wait¦2
   : └1╴... done.
EVENT: wait¦done¦1.6¦_wait¦2
END: wait¦done¦1.6¦_wait¦2
event
input
log
module
monitor
on
output
parser
wago conn
wago server
wait
worker
.
test :: wago localhost:59069
.
type: wago
host: localhost
port: 59069
.
test :: ‹WAGOqueue:test connected›
.
state: connected
since: 2003-04-05 06:07:08.050000
sent 0: 0
received 9: 0
processed 0: 9
open: 0
last_sent: <WAGOoutputRun obj>
last_sent_at: 2003-04-05 06:07:08.100000
in_queued: 0
out_queued: 0
conn type: wago
conn host: localhost
conn port: 59069
.
1 Yes
0 +WAIT 10 kill job <homevent.tokize.tokizer obj>
DEBUG> Yes
0 -WAIT 10 kill job <homevent.tokize.tokizer obj>
NEW: ‹ConditionalWorkSequence:19 (6)›
   : │  id: 19
   : │  call count: 0
   : │  EVENT: shutdown
   : └1╴... done.
EVENT: shutdown
0 +WAIT 11 kill job ‹WAGOqueue:test connected›
0 -WAIT 11 kill job ‹WAGOqueue:test connected›
0 conn deleted WAGOqueue test
NEW: ‹ConditionalWorkSequence:20 (4)›
   : │  id: 20
   : │  call count: 0
   : │  EVENT: module¦unload¦file
   : └1╴... done.
EVENT: module¦unload¦file
END: module¦unload¦file
NEW: ‹ConditionalWorkSequence:21 (4)›
   : │  id: 21
   : │  call count: 0
   : │  EVENT: module¦unload¦data
   : └1╴... done.
EVENT: module¦unload¦data
END: module¦unload¦data
NEW: ‹ConditionalWorkSequence:22 (4)›
   : │  id: 22
   : │  call count: 0
   : │  EVENT: module¦unload¦on_event
   : └1╴... done.
EVENT: module¦unload¦on_event
END: module¦unload¦on_event
NEW: ‹ConditionalWorkSequence:23 (4)›
   : │  id: 23
   : │  call count: 0
   : │  EVENT: module¦unload¦block
   : └1╴... done.
EVENT: module¦unload¦block
END: module¦unload¦block
NEW: ‹ConditionalWorkSequence:24 (4)›
   : │  id: 24
   : │  call count: 0
   : │  EVENT: module¦unload¦logging
   : └1╴... done.
EVENT: module¦unload¦logging
END: module¦unload¦logging
NEW: ‹ConditionalWorkSequence:25 (4)›
   : │  id: 25
   : │  call count: 0
   : │  EVENT: module¦unload¦wait
   : └1╴... done.
EVENT: module¦unload¦wait
END: module¦unload¦wait
NEW: ‹ConditionalWorkSequence:26 (4)›
   : │  id: 26
   : │  call count: 0
   : │  EVENT: module¦unload¦wago
   : └1╴... done.
EVENT: module¦unload¦wago
END: module¦unload¦wago
NEW: ‹ConditionalWorkSequence:27 (4)›
   : │  id: 27
   : │  call count: 0
   : │  EVENT: module¦unload¦ifelse
   : └1╴... done.
EVENT: module¦unload¦ifelse
END: module¦unload¦ifelse
NEW: ‹ConditionalWorkSequence:28 (4)›
   : │  id: 28
   : │  call count: 0
   : │  EVENT: module¦unload¦trigger
   : └1╴... done.
EVENT: module¦unload¦trigger
END: module¦unload¦trigger
NEW: ‹ConditionalWorkSequence:29 (4)›
   : │  id: 29
   : │  call count: 0
   : │  EVENT: module¦unload¦path
   : └1╴... done.
EVENT: module¦unload¦path
END: module¦unload¦path
NEW: ‹ConditionalWorkSequence:30 (4)›
   : │  id: 30
   : │  call count: 0
   : │  EVENT: module¦unload¦bool
   : └1╴... done.
EVENT: module¦unload¦bool
END: module¦unload¦bool
END: shutdown
