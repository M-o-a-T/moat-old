EVENT: startup
     : startup=True
EVENT: module¦load¦bool
     : deprecated=True
EVENT: module¦state¦bool
     : state=load
EVENT: module¦load¦logging
     : deprecated=True
EVENT: module¦state¦logging
     : state=load
EVENT: module¦load¦trigger
     : deprecated=True
EVENT: module¦state¦trigger
     : state=load
EVENT: module¦load¦wait
     : deprecated=True
EVENT: module¦state¦wait
     : state=load
EVENT: module¦load¦on_event
     : deprecated=True
EVENT: module¦state¦on_event
     : state=load
EVENT: module¦load¦wago
     : deprecated=True
EVENT: module¦state¦wago
     : state=load
EVENT: module¦load¦monitor
     : deprecated=True
EVENT: module¦state¦monitor
     : state=load
TRACE Create OnEvtHandler: wago¦connect¦test
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test
TRACE NewHandler 19
EVENT: wait¦start¦_wait¦t1
     : deprecated=True
     : end_time=0.2
     : loglevel=0
EVENT: wait¦state¦_wait¦t1
     : end_time=0.2
     : loglevel=0
     : state=start
TRACE conn setting up WAGOqueue test
TRACE conn connected WAGOqueue test
TRACE NotConn [[], [], [], []]
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'WAGO ready.' prio:2 type:MT_INFO›
TRACE !got UP_EVENT test
TRACE NotConn [[], [‹WAGOmonitorsMsg 8›], [‹WAGOkeepaliveMsg 9›], []]
TRACE conn setstate connecting connected
EVENT: wago¦connect¦test
     : deprecated=True
EVENT: wago¦state¦test
     : state=up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:['Monitors:'] prio:2 type:MT_MULTILINE›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:1 prio:2 type:MT_IND_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE 2003-04-05 06:07:08.150000 _wait¦t1: Forced timer done
EVENT: wait¦done¦_wait¦t1
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t1
     : end_time=0.2
     : loglevel=0
     : state=done
EVENT: output¦change¦foo¦baz
     : prev_value=None
     : value=True
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Set.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' prio:2 type:MT_ACK›
DEBUG> in_1 whynot
DEBUG in_1 whynot
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' prio:2 type:MT_ACK›
TRACE Yes
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' prio:2 type:MT_ACK›
DEBUG> in_2 why
DEBUG in_2 why
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' prio:2 type:MT_ACK›
TRACE Yes
EVENT: wait¦start¦timed¦set¦A
     : deprecated=True
     : end_time=0.4
     : loglevel=0
EVENT: wait¦state¦timed¦set¦A
     : end_time=0.4
     : loglevel=0
     : state=start
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
EVENT: output¦change¦foo¦baz
     : prev_value=True
     : value=False
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Cleared, monitor started.' msgid:2 prio:2 type:MT_IND_ACK›
TRACE 2003-04-05 06:07:08.750000 timed¦set¦A: Forced timer done
EVENT: wait¦done¦timed¦set¦A
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦timed¦set¦A
     : end_time=0.4
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
foo baz 1 :: foo¦baz¦1:None
.
EVENT: wait¦start¦timed¦set¦B
     : deprecated=True
     : end_time=1.4
     : loglevel=0
EVENT: wait¦state¦timed¦set¦B
     : end_time=1.4
     : loglevel=0
     : state=start
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 1' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 2' msgid:1 prio:2 type:MT_IND›
TRACE 2003-04-05 06:07:11.700000 timed¦set¦B: Forced timer done
EVENT: wait¦done¦timed¦set¦B
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦timed¦set¦B
     : end_time=1.4
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' prio:2 type:MT_ACK›
DEBUG> out_1 ho
DEBUG out_1 ho
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'0' prio:2 type:MT_ACK›
TRACE Yes
EVENT: wait¦start¦timed¦set¦C
     : deprecated=True
     : end_time=2.4
     : loglevel=0
EVENT: wait¦state¦timed¦set¦C
     : end_time=2.4
     : loglevel=0
     : state=start
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 3' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 4' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'TRIGGER' msgid:2 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:2 prio:2 type:MT_IND_NAK›
DEBUG> released
EVENT: output¦change¦foo¦baz
     : prev_value=False
     : value=None
DEBUG released
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE 2003-04-05 06:07:14.350000 timed¦set¦C: Forced timer done
EVENT: wait¦done¦timed¦set¦C
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦timed¦set¦C
     : end_time=2.4
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' prio:2 type:MT_ACK›
DEBUG> out_2 hey
DEBUG out_2 hey
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' prio:2 type:MT_ACK›
TRACE Yes
EVENT: wait¦start¦_wait¦t5
     : deprecated=True
     : end_time=2.5
     : loglevel=0
EVENT: wait¦state¦_wait¦t5
     : end_time=2.5
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:14.600000 _wait¦t5: Forced timer done
EVENT: wait¦done¦_wait¦t5
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t5
     : end_time=2.5
     : loglevel=0
     : state=done
EVENT: output¦change¦foo¦baz
     : prev_value=hey
     : value=False
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Cleared.' prio:2 type:MT_ACK›
EVENT: wait¦start¦_wait¦t6
     : deprecated=True
     : end_time=3.0
     : loglevel=0
EVENT: wait¦state¦_wait¦t6
     : end_time=3.0
     : loglevel=0
     : state=start
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 5' msgid:1 prio:2 type:MT_IND›
TRACE 2003-04-05 06:07:15.550000 _wait¦t6: Forced timer done
EVENT: wait¦done¦_wait¦t6
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t6
     : end_time=3.0
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Loop timer changed.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:3 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦count¦up
EVENT: monitor¦start¦test¦count¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:4 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦count¦down
EVENT: monitor¦start¦test¦count¦down
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:5 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦count¦both
EVENT: monitor¦start¦test¦count¦both
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 6' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:6 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦report¦up
EVENT: monitor¦start¦test¦report¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:7 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦report¦down
EVENT: monitor¦start¦test¦report¦down
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'monitor created' msgid:8 prio:2 type:MT_IND_ACK›
TRACE monitor Start run test¦report¦both
EVENT: monitor¦start¦test¦report¦both
EVENT: wait¦start¦_wait¦t7
     : deprecated=True
     : end_time=3.2
     : loglevel=0
EVENT: wait¦state¦_wait¦t7
     : end_time=3.2
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:15.800000 _wait¦t7: Forced timer done
EVENT: wait¦done¦_wait¦t7
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t7
     : end_time=3.2
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:8 prio:2 type:MT_IND›
TRACE monitor filter [1.0] on test¦report¦both
TRACE monitor End run test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:6 prio:2 type:MT_IND›
TRACE monitor filter [1.0] on test¦report¦up
TRACE monitor End run test¦report¦up
TRACE monitor Stop run test¦report¦up
EVENT: monitor¦update¦test¦report¦both
     : change_at=2003-04-05 06:07:15.600000
     : data=[1.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:15.850000
     : time=0.25
     : time_str=‹0.2 sec›
     : up=Run
     : value=1.0
EVENT: monitor¦update¦test¦report¦up
     : change_at=2003-04-05 06:07:15.600000
     : data=[1.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:15.850000
     : time=0.25
     : time_str=‹0.2 sec›
     : up=Run
     : value=1.0
EVENT: wait¦start¦_wait¦t8
     : deprecated=True
     : end_time=3.3
     : loglevel=0
EVENT: wait¦state¦_wait¦t8
     : end_time=3.3
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:16.200000 _wait¦t8: Forced timer done
EVENT: wait¦done¦_wait¦t8
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t8
     : end_time=3.3
     : loglevel=0
     : state=done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
EVENT: wait¦start¦_wait¦t9
     : deprecated=True
     : end_time=3.4
     : loglevel=0
EVENT: wait¦state¦_wait¦t9
     : end_time=3.4
     : loglevel=0
     : state=start
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'L' msgid:8 prio:2 type:MT_IND›
TRACE 2003-04-05 06:07:16.600000 _wait¦t9: Forced timer done
EVENT: wait¦done¦_wait¦t9
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t9
     : end_time=3.4
     : loglevel=0
     : state=done
TRACE 2003-04-05 06:07:16.850000 : Fake timer done
TRACE 2003-04-05 06:07:16.850000 : Fake timer done
TRACE monitor Start run test¦report¦both
TRACE monitor filter [2.0] on test¦report¦both
TRACE monitor End run test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'L' msgid:7 prio:2 type:MT_IND›
TRACE monitor filter [1.0] on test¦report¦down
TRACE monitor End run test¦report¦down
TRACE monitor Stop run test¦report¦down
EVENT: monitor¦update¦test¦report¦both
     : change_at=2003-04-05 06:07:15.600000
     : data=[2.0]
     : last_value=1.0
     : start_at=2003-04-05 06:07:16.850000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:16.850000
     : time=0.0
     : time_str=‹now›
     : up=Run
     : value=2.0
EVENT: monitor¦update¦test¦report¦down
     : change_at=2003-04-05 06:07:15.600000
     : data=[1.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:16.850000
     : time=1.25
     : time_str=‹1.2 sec›
     : up=Run
     : value=1.0
TRACE 2003-04-05 06:07:16.900000 : Fake timer done
TRACE 2003-04-05 06:07:16.900000 : Fake timer done
TRACE monitor Start run test¦report¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'OK' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:8 prio:2 type:MT_IND›
EVENT: wait¦start¦_wait¦t10
     : deprecated=True
     : end_time=4.5
     : loglevel=0
EVENT: wait¦state¦_wait¦t10
     : end_time=4.5
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:17.850000 : Fake timer done
TRACE 2003-04-05 06:07:17.850000 : Fake timer done
TRACE monitor Start run test¦report¦both
TRACE monitor filter [3.0] on test¦report¦both
TRACE monitor End run test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'H' msgid:6 prio:2 type:MT_IND›
TRACE monitor filter [2.0] on test¦report¦up
TRACE monitor End run test¦report¦up
TRACE monitor Stop run test¦report¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 7' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦update¦test¦report¦both
     : change_at=2003-04-05 06:07:15.600000
     : data=[3.0]
     : last_value=2.0
     : start_at=2003-04-05 06:07:17.850000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:17.850000
     : time=0.0
     : time_str=‹now›
     : up=Run
     : value=3.0
EVENT: monitor¦update¦test¦report¦up
     : change_at=2003-04-05 06:07:15.600000
     : data=[2.0]
     : last_value=1.0
     : start_at=2003-04-05 06:07:16.900000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:17.850000
     : time=0.95
     : time_str=‹0.9 sec›
     : up=Run
     : value=2.0
TRACE 2003-04-05 06:07:17.900000 : Fake timer done
TRACE 2003-04-05 06:07:17.900000 : Fake timer done
TRACE monitor Start run test¦report¦down
TRACE 2003-04-05 06:07:18.850000 : Fake timer done
TRACE 2003-04-05 06:07:18.850000 : Fake timer done
TRACE monitor Start run test¦report¦both
TRACE 2003-04-05 06:07:18.850000 : Fake timer done
TRACE 2003-04-05 06:07:18.850000 : Fake timer done
TRACE monitor Start run test¦report¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 8' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'2' msgid:3 prio:2 type:MT_IND›
TRACE monitor filter [2.0] on test¦count¦up
TRACE monitor End run test¦count¦up
TRACE monitor Stop run test¦count¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'3' msgid:5 prio:2 type:MT_IND›
TRACE monitor filter [3.0] on test¦count¦both
TRACE monitor End run test¦count¦both
TRACE monitor Stop run test¦count¦both
EVENT: monitor¦update¦test¦count¦up
     : change_at=2003-04-05 06:07:15.600000
     : data=[2.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:19.200000
     : time=3.6
     : time_str=‹3.6 sec›
     : up=Run
     : value=2.0
EVENT: monitor¦update¦test¦count¦both
     : change_at=2003-04-05 06:07:15.600000
     : data=[3.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:19.200000
     : time=3.6
     : time_str=‹3.6 sec›
     : up=Run
     : value=3.0
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'1' msgid:4 prio:2 type:MT_IND›
TRACE monitor filter [1.0] on test¦count¦down
TRACE monitor End run test¦count¦down
TRACE monitor Stop run test¦count¦down
EVENT: monitor¦update¦test¦count¦down
     : change_at=2003-04-05 06:07:15.600000
     : data=[1.0]
     : last_value=None
     : start_at=2003-04-05 06:07:15.600000
     : steps=(1, 1, None)
     : stop_at=2003-04-05 06:07:19.600000
     : time=4.0
     : time_str=‹4.0 sec›
     : up=Run
     : value=1.0
TRACE 2003-04-05 06:07:20.200000 : Fake timer done
TRACE 2003-04-05 06:07:20.200000 : Fake timer done
TRACE monitor Start run test¦count¦up
TRACE 2003-04-05 06:07:20.200000 : Fake timer done
TRACE 2003-04-05 06:07:20.200000 : Fake timer done
TRACE monitor Start run test¦count¦both
TRACE 2003-04-05 06:07:20.400000 _wait¦t10: Forced timer done
test count both :: Run ‹0.2 sec›
test count down :: Wait ‹0.2 sec›
test count up :: Run ‹0.2 sec›
test report both :: Run ‹1.6 sec›
test report down :: Run ‹2.5 sec›
test report up :: Run ‹1.6 sec›
.
EVENT: wait¦done¦_wait¦t10
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t10
     : end_time=4.5
     : loglevel=0
     : state=done
: ‹WAGOmon test¦count¦up run 1›
name: test¦count¦up
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦c)>
device: wago test 1 1
value: 2.0
up: Run
time: ‹0.2 sec›
steps: 1 / 1 / None
mode: count
timespec: 1.0
level: up
msgid: 3
last msg: monitor created
.
: ‹WAGOmon test¦count¦down on 1.0›
name: test¦count¦down
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦c)>
device: wago test 1 1
value: 1.0
up: Wait
time: ‹0.2 sec›
steps: 1 / 1 / None
data: 1.0
mode: count
timespec: 1.0
level: down
msgid: 4
last msg: monitor created
.
: ‹WAGOmon test¦count¦both run 1›
name: test¦count¦both
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦c)>
device: wago test 1 1
value: 3.0
up: Run
time: ‹0.2 sec›
steps: 1 / 1 / None
mode: count
timespec: 1.0
level: both
msgid: 5
last msg: monitor created
.
: ‹WAGOmon test¦report¦up run 1›
name: test¦report¦up
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦r)>
device: wago test 1 1
value: 2.0
up: Run
time: ‹1.6 sec›
steps: 1 / 1 / None
mode: report
level: up
msgid: 6
last msg: monitor created
.
: ‹WAGOmon test¦report¦down run 1›
name: test¦report¦down
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦r)>
device: wago test 1 1
value: 1.0
up: Run
time: ‹2.5 sec›
steps: 1 / 1 / None
mode: report
level: down
msgid: 7
last msg: monitor created
.
: ‹WAGOmon test¦report¦both run 1›
name: test¦report¦both
task job: <Greenlet: erh(<bound method WAGOmon._run_loop of ‹WAGOmon test¦r)>
device: wago test 1 1
value: 3.0
up: Run
time: ‹1.6 sec›
steps: 1 / 1 / None
mode: report
level: both
msgid: 8
last msg: monitor created
.
TRACE YesM 1.0 2.0 3.0
TRACE YesR 1.0 2.0 3.0
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:3 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦count¦up
TRACE monitor Stop run test¦count¦up
TRACE 2003-04-05 06:07:20.600000 : Fake timer done
TRACE 2003-04-05 06:07:20.600000 : Fake timer done
TRACE monitor Start run test¦count¦down
TRACE 2003-04-05 06:07:21.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 3 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 9' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦count¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:4 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦count¦down
TRACE monitor Stop run test¦count¦down
TRACE 2003-04-05 06:07:22.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 4 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 10' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦count¦down
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 11' msgid:1 prio:2 type:MT_IND›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:5 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦count¦both
TRACE monitor Stop run test¦count¦both
TRACE 2003-04-05 06:07:23.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 5 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 12' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦count¦both
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:6 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦report¦up
TRACE monitor Stop run test¦report¦up
TRACE 2003-04-05 06:07:24.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 6 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 13' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦report¦up
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:7 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦report¦down
TRACE monitor Stop run test¦report¦down
TRACE 2003-04-05 06:07:25.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 7 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 14' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦report¦down
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Deleted.' msgid:8 prio:2 type:MT_IND_NAK›
TRACE monitor End run test¦report¦both
TRACE monitor Stop run test¦report¦both
TRACE 2003-04-05 06:07:26.550000 : Fake timer done
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'Monitor 8 deleted.' prio:2 type:MT_ACK›
TRACE conn incoming WAGOqueue test ‹MsgIncoming: msg:'PING 15' msgid:1 prio:2 type:MT_IND›
EVENT: monitor¦stop¦test¦report¦both
EVENT: wait¦start¦_wait¦t11
     : deprecated=True
     : end_time=7.7
     : loglevel=0
EVENT: wait¦state¦_wait¦t11
     : end_time=7.7
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:26.750000 _wait¦t11: Forced timer done
test :: wago localhost:59069
.
EVENT: wait¦done¦_wait¦t11
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦_wait¦t11
     : end_time=7.7
     : loglevel=0
     : state=done
: ‹WAGOchannel:‹Collected WAGOchannel_forwarder:test››
name: test
task job: <Greenlet: erh(<bound method WAGOchannel_forwarder._reader of ‹WA)>
type: wago
host: localhost
port: 59069
.
test :: ‹WAGOqueue:test connected›
.
: ‹WAGOqueue:test connected›
name: test
task job: <Greenlet: erh(<bound method WAGOqueue._handler of ‹WAGOqueue:tes)>
queue: 0
state: connected
state since: -18.8 sec (2003-04-05 06:07:08)
sent: (0, 37)
received: (0, 70)
processed: (0, 37)
last_sent: ‹WAGOmonStop 86 msgid=8›
last_sent priority: 2
          timeout: 2
          result: Monitor 8 deleted.
last_sent_at: -1.2 sec (2003-04-05 06:07:25.55)
conn attempts: 0
conn timer: 3
out_queued: 0
channel: ‹WAGOchannel:‹Collected WAGOchannel_forwarder:test››
channel name: test
channel task job: <Greenlet: erh(<bound method WAGOchannel_forwarder._reader of ‹WA)>
        type: wago
        host: localhost
        port: 59069
msg recv 2 1: ‹WAGOkeepaliveMsg 87›
msg recv 2 1 priority: 2
msg recv 2 1 status: pending
             last: -0.1 )
             id: 1
.
TRACE Yes
TRACE Yes
TRACE Yes
TRACE !got DOWN_EVENT test
TRACE conn deleted WAGOqueue test
EVENT: wago¦disconnect¦test
     : deprecated=True
EVENT: wago¦state¦test
     : state=down
DEBUG> now we test a nonexistent port
DEBUG now we test a nonexistent port
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
EVENT: wait¦start¦poll¦nonexist
     : deprecated=True
     : end_time=8.7
     : loglevel=0
EVENT: wait¦state¦poll¦nonexist
     : end_time=8.7
     : loglevel=0
     : state=start
TRACE !got NOT_UP_EVENT test nonexist
ERROR> Setting up
EVENT: wago¦error¦test¦nonexist
     : deprecated=True
EVENT: wago¦state¦test¦nonexist
     : error=[Errno 111] Connection refused
     : state=error
ERROR> [Errno 111] Connection refused
ERROR Setting up
ERROR [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.200
TRACE 2003-04-05 06:07:27.300000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
TRACE !got NOT_UP_EVENT test nonexist
ERROR> Setting up
EVENT: wago¦error¦test¦nonexist
     : deprecated=True
EVENT: wago¦state¦test¦nonexist
     : error=[Errno 111] Connection refused
     : state=error
ERROR> [Errno 111] Connection refused
ERROR Setting up
ERROR [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.320
TRACE 2003-04-05 06:07:28.250000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦nonexist
TRACE !got NOT_UP_EVENT test nonexist
ERROR> Setting up
EVENT: wago¦error¦test¦nonexist
     : deprecated=True
EVENT: wago¦state¦test¦nonexist
     : error=[Errno 111] Connection refused
     : state=error
ERROR> [Errno 111] Connection refused
ERROR Setting up
ERROR [Errno 111] Connection refused
TRACE conn setstate connecting waiting: wait 0.500
TRACE 2003-04-05 06:07:29.550000 poll¦nonexist: Forced timer done
: ‹WAGOqueue:test¦nonexist connecting›
name: test¦nonexist
task job: <Greenlet: erh(<bound method WAGOqueue._handler of ‹WAGOqueue:tes)>
EVENT: wait¦done¦poll¦nonexist
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦poll¦nonexist
     : end_time=8.7
     : loglevel=0
     : state=done
queue: 0
state: connecting
state since: -1.4 sec (2003-04-05 06:07:28.25)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 3
conn timer: 0.5
out_queued: 0
.
DEBUG> now we test a port that always EOFs
DEBUG now we test a port that always EOFs
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦closing
EVENT: wait¦start¦poll¦closing
     : deprecated=True
     : end_time=9.7
     : loglevel=0
EVENT: wait¦state¦poll¦closing
     : end_time=9.7
     : loglevel=0
     : state=start
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE NotConn [[], [], [], []]
TRACE !got DOWN_EVENT test closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.120
EVENT: wago¦disconnect¦test¦closing
     : deprecated=True
EVENT: wago¦state¦test¦closing
     : state=down
TRACE 2003-04-05 06:07:29.800000 : Forced timer done
TRACE 2003-04-05 06:07:29.850000 : Forced timer done
TRACE 2003-04-05 06:07:30.050000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦closing
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE NotConn [[], [], [], []]
TRACE !got DOWN_EVENT test closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.192
EVENT: wago¦disconnect¦test¦closing
     : deprecated=True
EVENT: wago¦state¦test¦closing
     : state=down
TRACE 2003-04-05 06:07:30.300000 : Forced timer done
TRACE 2003-04-05 06:07:30.750000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦closing
TRACE 2003-04-05 06:07:30.750000 : Forced timer done
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE NotConn [[], [], [], []]
TRACE !got DOWN_EVENT test closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.307
EVENT: wago¦disconnect¦test¦closing
     : deprecated=True
EVENT: wago¦state¦test¦closing
     : state=down
TRACE 2003-04-05 06:07:31.350000 : Forced timer done
TRACE 2003-04-05 06:07:31.550000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦closing
TRACE conn setting up WAGOqueue test¦closing
TRACE conn connected WAGOqueue test¦closing
TRACE NotConn [[], [], [], []]
TRACE !got DOWN_EVENT test closing
TRACE conn ReOpen WAGOqueue test¦closing
TRACE conn setstate connecting waiting: wait 0.492
EVENT: wago¦disconnect¦test¦closing
     : deprecated=True
EVENT: wago¦state¦test¦closing
     : state=down
TRACE 2003-04-05 06:07:32.100000 : Forced timer done
TRACE 2003-04-05 06:07:32.400000 poll¦closing: Forced timer done
: ‹WAGOqueue:test¦closing ReOpen›
name: test¦closing
task job: <Greenlet: erh(<bound method WAGOqueue._handler of ‹WAGOqueue:tes)>
EVENT: wait¦done¦poll¦closing
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦poll¦closing
     : end_time=9.7
     : loglevel=0
     : state=done
queue: 0
state: ReOpen
state since: -0.8 sec (2003-04-05 06:07:31.55)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 4
conn timer: 0.5
out_queued: 1
msg send 1 1: ‹WAGOmonitorsMsg 94›
msg send 1 1 priority: 1
msg send 1 1 status: pending
msg recv 0 1: ‹WAGOinitMsg 95›
             priority: 0
.
DEBUG> now we test a port that does not answer
DEBUG now we test a port that does not answer
TRACE conn setstate init closed
TRACE conn setstate closed want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦no_answer
EVENT: wait¦start¦poll¦no_answer
     : deprecated=True
     : end_time=10.8
     : loglevel=0
EVENT: wait¦state¦poll¦no_answer
     : end_time=10.8
     : loglevel=0
     : state=start
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE NotConn [[], [], [], []]
TRACE 2003-04-05 06:07:32.850000 : Forced timer done
TRACE 2003-04-05 06:07:32.950000 : Forced timer done
TRACE !got DOWN_EVENT test no_answer
TRACE conn ReOpen WAGOqueue test¦no_answer
TRACE conn setstate connecting waiting: wait 0.120
EVENT: wago¦disconnect¦test¦no_answer
     : deprecated=True
EVENT: wago¦state¦test¦no_answer
     : state=down
TRACE 2003-04-05 06:07:33.200000 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦no_answer
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE NotConn [[], [], [], []]
TRACE 2003-04-05 06:07:33.600000 : Forced timer done
TRACE !got DOWN_EVENT test no_answer
TRACE conn ReOpen WAGOqueue test¦no_answer
TRACE conn setstate connecting waiting: wait 0.192
EVENT: wago¦disconnect¦test¦no_answer
     : deprecated=True
EVENT: wago¦state¦test¦no_answer
     : state=down
TRACE 2003-04-05 06:07:34 : Forced timer done
TRACE conn setstate waiting want
TRACE conn setstate want connecting
TRACE conn connecting WAGOqueue test¦no_answer
TRACE conn setting up WAGOqueue test¦no_answer
TRACE conn connected WAGOqueue test¦no_answer
TRACE NotConn [[], [], [], []]
TRACE 2003-04-05 06:07:34.450000 : Forced timer done
TRACE !got DOWN_EVENT test no_answer
TRACE conn ReOpen WAGOqueue test¦no_answer
TRACE conn setstate connecting waiting: wait 0.307
EVENT: wago¦disconnect¦test¦no_answer
     : deprecated=True
EVENT: wago¦state¦test¦no_answer
     : state=down
TRACE 2003-04-05 06:07:34.500000 poll¦no_answer: Forced timer done
: ‹WAGOqueue:test¦no_answer ReOpen›
name: test¦no_answer
task job: <Greenlet: erh(<bound method WAGOqueue._handler of ‹WAGOqueue:tes)>
EVENT: wait¦done¦poll¦no_answer
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦poll¦no_answer
     : end_time=10.8
     : loglevel=0
     : state=done
queue: 0
state: ReOpen
state since: now (2003-04-05 06:07:34.45)
sent: (0, 0)
received: (0, 0)
processed: (0, 0)
conn attempts: 3
conn timer: 0.49152000000000007
out_queued: 1
msg send 1 1: ‹WAGOmonitorsMsg 9f›
msg send 1 1 priority: 1
msg send 1 1 status: pending
msg recv 0 1: ‹WAGOinitMsg a0›
             priority: 0
.
EVENT: wait¦start¦poll¦end
     : deprecated=True
     : end_time=28.5
     : loglevel=0
EVENT: wait¦state¦poll¦end
     : end_time=28.5
     : loglevel=0
     : state=start
TRACE 2003-04-05 06:07:35.050000 : Forced timer done
TRACE 2003-04-05 06:07:36.500000 poll¦end: Fake timer done
EVENT: wait¦done¦poll¦end
     : deprecated=True
     : loglevel=0
EVENT: wait¦state¦poll¦end
     : end_time=28.5
     : loglevel=0
     : state=done
