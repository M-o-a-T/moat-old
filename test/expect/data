EVENT: startup
NEW: <ConditionalWorkSequence:1 (4)>
   : │  EVENT: startup
   : └1╴... done.
block :: Block-level statements
data :: provides a couple of common data access functions
on_event :: the 'on EVENT:' handler
trigger :: Basic event handling
wait :: Delay handling
.
name: on_event
path: ../modules/on_event.py
info: the 'on EVENT:' handler
.
-10 :: Logger
-9 :: shutdown first
-8 :: Wait killer
101 :: Logger
102 :: shutdown handler
103 :: shutdown last
.
.
event
log
module
on
wait
worker
.
0 Create OnEvtHandler: foo
0 NewHandler 1
EVENT: wait¦start¦×××¦_wait¦2
NEW: <ConditionalWorkSequence:2 (4)>
   : │  EVENT: wait¦start¦×××¦_wait¦2
   : └1╴... done.
EVENT: startup
END: startup
EVENT: wait¦start¦×××¦_wait¦2
END: wait¦start¦×××¦_wait¦2
EVENT: wait¦done¦×××¦_wait¦2
NEW: <ConditionalWorkSequence:3 (4)>
   : │  EVENT: wait¦done¦×××¦_wait¦2
   : └1╴... done.
EVENT: wait¦done¦×××¦_wait¦2
END: wait¦done¦×××¦_wait¦2
EVENT: foo
NEW: <ConditionalWorkSequence:4 (5)>
   : │  EVENT: foo
   : ├1╴on foo ‹OnEventHandler›
   : │  prio: 51
   : │  step: block ‹Block›
   : │      : step: wait foo waiter ‹WaitHandler›
   : └2╴... done.
EVENT: wait¦start¦×××¦_wait¦3
NEW: <ConditionalWorkSequence:5 (4)>
   : │  EVENT: wait¦start¦×××¦_wait¦3
   : └1╴... done.
EVENT: foo
RUN: on foo ‹OnEventHandler›
   : prio: 51
   : step: block ‹Block›
   :     : step: wait foo waiter ‹WaitHandler›
 at: <ConditionalWorkSequence:4 (5)> (step 1)
 ev: EVENT: foo
EVENT: wait¦start¦×××¦foo¦waiter
NEW: <ConditionalWorkSequence:6 (4)>
   : │  EVENT: wait¦start¦×××¦foo¦waiter
   : └1╴... done.
EVENT: wait¦start¦×××¦_wait¦3
END: wait¦start¦×××¦_wait¦3
EVENT: wait¦start¦×××¦foo¦waiter
END: wait¦start¦×××¦foo¦waiter
EVENT: wait¦done¦×××¦_wait¦3
NEW: <ConditionalWorkSequence:7 (4)>
   : │  EVENT: wait¦done¦×××¦_wait¦3
   : └1╴... done.
EVENT: wait¦done¦×××¦_wait¦3
END: wait¦done¦×××¦_wait¦3
4 :: Worker 4 for ‹foo›
.
id: 4
event: foo
report: <ConditionalWorkSequence:4 (5)>
report: │  EVENT: foo
report: ╞1╕on foo ‹OnEventHandler›
report: │ │prio: 51
report: │ │step: block ‹Block›
report: │ ╵    : step: wait foo waiter ‹WaitHandler›
report: └2╴... done.
.
EVENT: wait¦start¦×××¦_wait¦4
NEW: <ConditionalWorkSequence:8 (4)>
   : │  EVENT: wait¦start¦×××¦_wait¦4
   : └1╴... done.
EVENT: wait¦start¦×××¦_wait¦4
END: wait¦start¦×××¦_wait¦4
EVENT: wait¦done¦×××¦foo¦waiter
NEW: <ConditionalWorkSequence:9 (4)>
   : │  EVENT: wait¦done¦×××¦foo¦waiter
   : └1╴... done.
EVENT: wait¦done¦×××¦foo¦waiter
END: wait¦done¦×××¦foo¦waiter
END: foo
EVENT: wait¦done¦×××¦_wait¦4
NEW: <ConditionalWorkSequence:10 (4)>
   : │  EVENT: wait¦done¦×××¦_wait¦4
   : └1╴... done.
EVENT: wait¦done¦×××¦_wait¦4
END: wait¦done¦×××¦_wait¦4
