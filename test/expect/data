NEW: ‹ConditionalWorkSequence:7 (4)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
0 locking +WAIT 1 start job ‹Collected Parser:n1›
0 locking -WAIT 1 start job ‹Collected Parser:n1›
0 locking +WAIT 2 start job <homevent.tokize.tokizer obj>
0 locking -WAIT 2 start job <homevent.tokize.tokizer obj>
block :: Block-level statements
data :: provides a couple of common data access functions
on_event :: the 'on EVENT:' handler
trigger :: Basic event handling
wait :: Delay handling
.
name: on_event
path: ../modules/on_event.py
info: the 'on EVENT:' handler
.
2 :: Logger
4 :: shutdown first
1 :: free all collections
3 :: Logger
6 :: shutdown handler
5 :: shutdown last
.
.
event
log
module
on
parser
wait
worker
.
0 Create OnEvtHandler: foo
0 NewHandler 8
0 locking +WAIT 3 start job ‹Waiter vorher ??›
0 locking -WAIT 3 start job ‹Waiter vorher ??›
NEW: ‹ConditionalWorkSequence:9 (4)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: wait¦start¦×××¦vorher
   : └1╴... done.
EVENT: wait¦start¦×××¦vorher
END: wait¦start¦×××¦vorher
NEW: ‹ConditionalWorkSequence:10 (4)›
   : │  id: 10
   : │  call count: 0
   : │  EVENT: wait¦done¦×××¦vorher
   : └1╴... done.
EVENT: wait¦done¦×××¦vorher
END: wait¦done¦×××¦vorher
0 locking +WAIT 4 start job ‹TriggerHandler: trigger 3›
0 locking -WAIT 4 start job ‹TriggerHandler: trigger 3›
0 locking +WAIT 5 start job ‹Waiter nachher ??›
0 locking -WAIT 5 start job ‹Waiter nachher ??›
NEW: ‹ConditionalWorkSequence:11 (4)›
   : │  id: 11
   : │  call count: 0
   : │  EVENT: wait¦start¦×××¦nachher
   : └1╴... done.
EVENT: wait¦start¦×××¦nachher
END: wait¦start¦×××¦nachher
NEW: ‹ConditionalWorkSequence:12 (5)›
   : │  id: 12
   : │  call count: 0
   : │  IEVENT: foo
   : ├1╴on foo ‹OnEventHandler›
   : │  prio: 51
   : │  step: block ‹Block›
   : │      : step: wait foo waiter ‹WaitHandler›
   : └2╴... done.
IEVENT: foo
RUN: on foo ‹OnEventHandler›
   : prio: 51
   : step: block ‹Block›
   :     : step: wait foo waiter ‹WaitHandler›
 at: ‹ConditionalWorkSequence:12 (5)› (step 1)
 ev: IEVENT: foo
0 locking +WAIT 6 start job ‹Waiter foo¦waiter ??›
0 locking -WAIT 6 start job ‹Waiter foo¦waiter ??›
NEW: ‹ConditionalWorkSequence:13 (4)›
   : │  id: 13
   : │  call count: 0
   : │  EVENT: wait¦start¦×××¦foo¦waiter
   : └1╴... done.
EVENT: wait¦start¦×××¦foo¦waiter
END: wait¦start¦×××¦foo¦waiter
NEW: ‹ConditionalWorkSequence:14 (4)›
   : │  id: 14
   : │  call count: 0
   : │  EVENT: wait¦done¦×××¦nachher
   : └1╴... done.
EVENT: wait¦done¦×××¦nachher
END: wait¦done¦×××¦nachher
5 :: Worker 12 for ‹foo›
.
: ‹ConditionalWorkSequence:12 (5)›
id: 12
event: foo
call count: 1
last call: now (2003-04-05 06:07:08.10)
last event: foo
           type: InputEvent
code: ╞1╕on foo ‹OnEventHandler›
code: │ │prio: 51
code: │ │step: block ‹Block›
code: │ ╵    : step: wait foo waiter ‹WaitHandler›
code: └2╴... done.
.
0 locking +WAIT 7 start job ‹Waiter ende ??›
0 locking -WAIT 7 start job ‹Waiter ende ??›
NEW: ‹ConditionalWorkSequence:15 (4)›
   : │  id: 15
   : │  call count: 0
   : │  EVENT: wait¦start¦×××¦ende
   : └1╴... done.
EVENT: wait¦start¦×××¦ende
END: wait¦start¦×××¦ende
NEW: ‹ConditionalWorkSequence:16 (4)›
   : │  id: 16
   : │  call count: 0
   : │  EVENT: wait¦done¦×××¦foo¦waiter
   : └1╴... done.
EVENT: wait¦done¦×××¦foo¦waiter
END: wait¦done¦×××¦foo¦waiter
END: foo
NEW: ‹ConditionalWorkSequence:17 (4)›
   : │  id: 17
   : │  call count: 0
   : │  EVENT: wait¦done¦×××¦ende
   : └1╴... done.
EVENT: wait¦done¦×××¦ende
END: wait¦done¦×××¦ende
0 locking +WAIT 8 kill job <homevent.tokize.tokizer obj>
0 locking -WAIT 8 kill job <homevent.tokize.tokizer obj>
