NEW: ‹ConditionalWorkSequence:5 (2)›
   : │  id: 5
   : │  call count: 0
   : │  EVENT: startup
   : │       : startup=True
   : └1╴... done.
EVENT: startup
     : startup=True
END: startup
TRACE Create OnEvtHandler: send¦logger
TRACE NewHandler 6
NEW: ‹ConditionalWorkSequence:7 (2)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: wait¦start¦1.0¦shutdown
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦start¦1.0¦shutdown
     : loglevel=0
END: wait¦start¦1.0¦shutdown
NEW: ‹ConditionalWorkSequence:8 (2)›
   : │  id: 8
   : │  call count: 0
   : │  EVENT: wait¦start¦shutdown
   : │       : loglevel=0
   : │       : end_time=1.0
   : └1╴... done.
EVENT: wait¦start¦shutdown
     : loglevel=0
     : end_time=1.0
END: wait¦start¦shutdown
NEW: ‹ConditionalWorkSequence:9 (2)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: rpc¦connect¦foo¦n1
   : └1╴... done.
EVENT: rpc¦connect¦foo¦n1
END: rpc¦connect¦foo¦n1
DEBUG TEST (Name('event',),)
DEBUG TEST (Name('job',),)
DEBUG TEST (Name('log',),)
DEBUG TEST (Name('module',),)
DEBUG TEST (Name('net', 'connection'),)
DEBUG TEST (Name('net', 'server'),)
DEBUG TEST (Name('on',),)
DEBUG TEST (Name('parser',),)
DEBUG TEST (Name('rpc', 'connection'),)
DEBUG TEST (Name('rpc', 'server'),)
DEBUG TEST (Name('state',),)
DEBUG TEST (Name('wait',),)
DEBUG TEST (Name('worker',),)
DEBUG TEST .
DEBUG TEST (Name(u'foo',),)
DEBUG TEST .
DEBUG TEST (u'', u'\u2039Collected RPCserver:foo\u203a')
DEBUG TEST (u'name', u'foo')
DEBUG TEST (u'host', u'')
DEBUG TEST (u'port', u'56478')
DEBUG TEST (u'server', u'<homevent.gevent_rpyc.GeventServer obj>')
DEBUG TEST .
DEBUG TEST (u'', u'\u2039Collected namedRPC:foo\xa6n1\u203a')
DEBUG TEST (u'name', u'foo\xa6n1')
DEBUG TEST (u'local host', u'::ffff:127.0.0.1')
DEBUG TEST (u'local port', u'56478')
DEBUG TEST (u'remote host', u'::ffff:127.0.0.1')
DEBUG TEST (u'remote port', u'51357')
DEBUG TEST .
DEBUG TEST >>> Global : word list:
DEBUG TEST >>> Known words:
DEBUG TEST >>> async         : run multiple statements asynchronously
DEBUG TEST >>> block         : group multiple statements
DEBUG TEST >>> catch         : catch: [statements]
DEBUG TEST >>> conditions    : List of conditions you can use in 'if' statements.
DEBUG TEST >>> connect net   : connect to a TCP port
DEBUG TEST >>> del           : delete a part of the system
DEBUG TEST >>> dump context  : dump the variable context
DEBUG TEST >>> exit          : stop processing input
DEBUG TEST >>> forget state  : delete a saved state from the persistent database
DEBUG TEST >>> help          : show doc texts
DEBUG TEST >>> list          : list of / show details for various parts of the system
DEBUG TEST >>> listen net    : listen to a TCP socket
DEBUG TEST >>> listen rpc    : create an RPC server
DEBUG TEST >>> load          : load a module
DEBUG TEST >>> log           : configure reporting
DEBUG TEST >>> log error     : log error [Severity]
DEBUG TEST >>> log limit     : limit logging level
DEBUG TEST >>> next handler  : skip ahead to the next on… event handler
DEBUG TEST >>> on            : on [event...]: [statements]
DEBUG TEST >>> send net      : send a line to a TCP connection
DEBUG TEST >>> set state     : set some state to something
DEBUG TEST >>> shutdown      : stops executing the program.
DEBUG TEST >>> skip this     : do not run these statements
DEBUG TEST >>> state         : Create a state variable
DEBUG TEST >>> trigger       : send an event
DEBUG TEST >>> trigger error : trigger error NAME…
DEBUG TEST >>> try           : try: [statements]
DEBUG TEST >>> var state     : assign a variable to report a state
DEBUG TEST >>> var wait      : assign a variable to report when a waiter will time out
DEBUG TEST >>> wait          : delay for N seconds
Traceback (most recent call last):
  File "../modules/rpc.py", line 326, in exposed_command
    return CommandProcessor(parent=self,ctx=self.ctx).simple_statement(args)
  File "../modules/rpc.py", line 102, in simple_statement
    fn = self.lookup(args)
  File "/home/smurf/homevent/homevent/interpreter.py", line 78, in lookup
    fn = me.lookup(event)
  File "/home/smurf/homevent/homevent/statement.py", line 242, in lookup
    raise UnknownWordError(args,self)
UnknownWordError: Cannot find word <fuubar This is not found.> in <Global>
NEW: ‹WorkSequence:11 (2)›
   : │  id: 11
   : │  call count: 0
   : │  Cannot find word ‹fuubar This is not found.› in ‹Global›
   : └1╴... done.
Traceback (most recent call last):
  File "../modules/rpc.py", line 326, in exposed_command
    return CommandProcessor(parent=self,ctx=self.ctx).simple_statement(args)
  File "../modules/rpc.py", line 102, in simple_statement
    fn = self.lookup(args)
  File "/home/smurf/homevent/homevent/interpreter.py", line 78, in lookup
    fn = me.lookup(event)
  File "/home/smurf/homevent/homevent/statement.py", line 242, in lookup
    raise UnknownWordError(args,self)
UnknownWordError: Cannot find word <fuubar This is not found.> in <Global>
END: UnknownWordError
DEBUG TEST YES Got an error
DEBUG This is logged.
DEBUG TEST The value is: Test123
NEW: ‹ConditionalWorkSequence:12 (3)›
   : │  id: 12
   : │  call count: 0
   : │  IEVENT: send¦logger
   : ├1╴on send logger ‹OnEventHandler›
   : │  prio: 51
   : │  step: log DEBUG hello This is a test ‹LogHandler›
   : └2╴... done.
IEVENT: send¦logger
RUN: on send logger ‹OnEventHandler›
   : prio: 51
   : step: log DEBUG hello This is a test ‹LogHandler›
 at: ‹ConditionalWorkSequence:12 (3)› (step 1)
 ev: IEVENT: send¦logger
DEBUG hello This is a test
END: send¦logger
TRACE 2014-11-17 14:41:51.795262 shutdown: Forced timer done
NEW: ‹ConditionalWorkSequence:13 (2)›
   : │  id: 13
   : │  call count: 0
   : │  EVENT: wait¦done¦1.0¦shutdown
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦1.0¦shutdown
     : loglevel=0
END: wait¦done¦1.0¦shutdown
NEW: ‹ConditionalWorkSequence:14 (2)›
   : │  id: 14
   : │  call count: 0
   : │  EVENT: wait¦done¦shutdown
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦shutdown
     : loglevel=0
END: wait¦done¦shutdown
NEW: ‹ConditionalWorkSequence:15 (2)›
   : │  id: 15
   : │  call count: 0
   : │  EVENT: wait¦start¦2.0¦foo¦b
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦start¦2.0¦foo¦b
     : loglevel=0
END: wait¦start¦2.0¦foo¦b
NEW: ‹ConditionalWorkSequence:16 (2)›
   : │  id: 16
   : │  call count: 0
   : │  EVENT: wait¦start¦foo¦b
   : │       : loglevel=0
   : │       : end_time=2.0
   : └1╴... done.
EVENT: wait¦start¦foo¦b
     : loglevel=0
     : end_time=2.0
END: wait¦start¦foo¦b
TRACE 2014-11-17 14:41:52.804921 foo¦b: Forced timer done
NEW: ‹ConditionalWorkSequence:17 (2)›
   : │  id: 17
   : │  call count: 0
   : │  EVENT: wait¦done¦2.0¦foo¦b
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦2.0¦foo¦b
     : loglevel=0
END: wait¦done¦2.0¦foo¦b
NEW: ‹ConditionalWorkSequence:18 (2)›
   : │  id: 18
   : │  call count: 0
   : │  EVENT: wait¦done¦foo¦b
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦foo¦b
     : loglevel=0
END: wait¦done¦foo¦b
