NEW: ‹ConditionalWorkSequence:5 (2)›
   : │  id: 5
   : │  call count: 0
   : │  EVENT: startup
   : │       : startup=True
   : └1╴... done.
EVENT: startup
     : startup=True
END: startup
TRACE Yes!
TRACE Yes!
TRACE Set to ONE
NEW: ‹ConditionalWorkSequence:6 (2)›
   : │  id: 6
   : │  call count: 0
   : │  EVENT: state¦-¦one¦foo¦bar
   : └1╴... done.
EVENT: state¦-¦one¦foo¦bar
END: state¦-¦one¦foo¦bar
NEW: ‹ConditionalWorkSequence:7 (2)›
   : │  id: 7
   : │  call count: 0
   : │  EVENT: state¦change¦foo¦bar
   : │       : value=one
   : │       : prev_value=-
   : └1╴... done.
EVENT: state¦change¦foo¦bar
     : value=one
     : prev_value=-
END: state¦change¦foo¦bar
TRACE Set to TWO
NEW: ‹ConditionalWorkSequence:8 (2)›
   : │  id: 8
   : │  call count: 0
   : │  EVENT: state¦one¦two¦foo¦bar
   : └1╴... done.
EVENT: state¦one¦two¦foo¦bar
END: state¦one¦two¦foo¦bar
NEW: ‹ConditionalWorkSequence:9 (2)›
   : │  id: 9
   : │  call count: 0
   : │  EVENT: state¦change¦foo¦bar
   : │       : value=two
   : │       : prev_value=one
   : └1╴... done.
EVENT: state¦change¦foo¦bar
     : value=two
     : prev_value=one
END: state¦change¦foo¦bar
TRACE Create OnEvtHandler: state¦*¦three¦foo¦bar
TRACE NewHandler 10
TRACE Set to THREE
NEW: ‹ConditionalWorkSequence:11 (3)›
   : │  id: 11
   : │  call count: 0
   : │  EVENT: state¦two¦three¦foo¦bar
   : ├1╴on state * three foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: try ‹TryStatement›
   : │      : step: set state four foo bar ‹SetStateHandler›
   : │      : step: log DEBUG No! (No shit happened.) ‹LogHandler›
   : └2╴... done.
EVENT: state¦two¦three¦foo¦bar
RUN: on state * three foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: try ‹TryStatement›
   :     : step: set state four foo bar ‹SetStateHandler›
   :     : step: log DEBUG No! (No shit happened.) ‹LogHandler›
 at: ‹ConditionalWorkSequence:11 (3)› (step 1)
 ev: EVENT: state¦two¦three¦foo¦bar
TRACE Set to FOUR
DEBUG Yes! (Shit happens.)
END: state¦two¦three¦foo¦bar
NEW: ‹ConditionalWorkSequence:12 (2)›
   : │  id: 12
   : │  call count: 0
   : │  EVENT: state¦change¦foo¦bar
   : │       : value=three
   : │       : prev_value=two
   : └1╴... done.
EVENT: state¦change¦foo¦bar
     : value=three
     : prev_value=two
END: state¦change¦foo¦bar
TRACE Create OnEvtHandler: state¦*¦twohalf¦foo¦bar
TRACE NewHandler 13
TRACE Set to TWOHALF
NEW: ‹ConditionalWorkSequence:14 (3)›
   : │  id: 14
   : │  call count: 0
   : │  EVENT: state¦three¦twohalf¦foo¦bar
   : ├1╴on state * twohalf foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: set state fourtoo foo bar ‹SetStateHandler›
   : └2╴... done.
EVENT: state¦three¦twohalf¦foo¦bar
RUN: on state * twohalf foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: set state fourtoo foo bar ‹SetStateHandler›
 at: ‹ConditionalWorkSequence:14 (3)› (step 1)
 ev: EVENT: state¦three¦twohalf¦foo¦bar
TRACE Set to FOUR
END: state¦three¦twohalf¦foo¦bar
Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
NEW: ‹WorkSequence:15 (2)›
   : │  id: 15
   : │  call count: 0
   : │  Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
   : └1╴... done.
Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
END: StateChangeError
NEW: ‹ConditionalWorkSequence:16 (2)›
   : │  id: 16
   : │  call count: 0
   : │  EVENT: state¦change¦foo¦bar
   : │       : value=twohalf
   : │       : prev_value=three
   : └1╴... done.
EVENT: state¦change¦foo¦bar
     : value=twohalf
     : prev_value=three
END: state¦change¦foo¦bar
TRACE Set to THREE
NEW: ‹ConditionalWorkSequence:17 (3)›
   : │  id: 17
   : │  call count: 0
   : │  EVENT: state¦twohalf¦three¦foo¦bar
   : ├1╴on state * three foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: try ‹TryStatement›
   : │      : step: set state four foo bar ‹SetStateHandler›
   : │      : step: log DEBUG No! (No shit happened.) ‹LogHandler›
   : └2╴... done.
EVENT: state¦twohalf¦three¦foo¦bar
RUN: on state * three foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: try ‹TryStatement›
   :     : step: set state four foo bar ‹SetStateHandler›
   :     : step: log DEBUG No! (No shit happened.) ‹LogHandler›
 at: ‹ConditionalWorkSequence:17 (3)› (step 1)
 ev: EVENT: state¦twohalf¦three¦foo¦bar
TRACE Set to FOUR
DEBUG Yes! (Shit happens.)
END: state¦twohalf¦three¦foo¦bar
NEW: ‹ConditionalWorkSequence:18 (2)›
   : │  id: 18
   : │  call count: 0
   : │  EVENT: state¦change¦foo¦bar
   : │       : value=three
   : │       : prev_value=twohalf
   : └1╴... done.
EVENT: state¦change¦foo¦bar
     : value=three
     : prev_value=twohalf
END: state¦change¦foo¦bar
NEW: ‹ConditionalWorkSequence:19 (2)›
   : │  id: 19
   : │  call count: 0
   : │  EVENT: wait¦start¦0.1¦_wait¦1
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦start¦0.1¦_wait¦1
     : loglevel=0
END: wait¦start¦0.1¦_wait¦1
NEW: ‹ConditionalWorkSequence:20 (2)›
   : │  id: 20
   : │  call count: 0
   : │  EVENT: wait¦start¦_wait¦1
   : │       : loglevel=0
   : │       : end_time=0.1
   : └1╴... done.
EVENT: wait¦start¦_wait¦1
     : loglevel=0
     : end_time=0.1
END: wait¦start¦_wait¦1
TRACE 2003-04-05 06:07:08.150000 _wait¦1: Fake timer done
NEW: ‹ConditionalWorkSequence:21 (2)›
   : │  id: 21
   : │  call count: 0
   : │  EVENT: wait¦done¦0.1¦_wait¦1
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦0.1¦_wait¦1
     : loglevel=0
END: wait¦done¦0.1¦_wait¦1
NEW: ‹ConditionalWorkSequence:22 (2)›
   : │  id: 22
   : │  call count: 0
   : │  EVENT: wait¦done¦_wait¦1
   : │       : loglevel=0
   : └1╴... done.
EVENT: wait¦done¦_wait¦1
     : loglevel=0
END: wait¦done¦_wait¦1
foo bar :: three — 0.1 sec
.
: ‹Collected State:foo¦bar›
name: foo¦bar
value: three
lock: No
last value: twohalf
last change: -0.1 sec (2003-04-05 06:07:08)
.
TRACE Yes!
TRACE Yes!
TRACE Yes!
TRACE Create OnEvtHandler: whatever
TRACE NewHandler 23
NEW: ‹ConditionalWorkSequence:24 (3)›
   : │  id: 24
   : │  call count: 0
   : │  IEVENT: whatever
   : ├1╴on whatever ‹OnEventHandler›
   : │  prio: 51
   : │  step: var state x foo bar ‹VarStateHandler›
   : │  step: log TRACE We got $x ‹LogHandler›
   : └2╴... done.
IEVENT: whatever
RUN: on whatever ‹OnEventHandler›
   : prio: 51
   : step: var state x foo bar ‹VarStateHandler›
   : step: log TRACE We got $x ‹LogHandler›
 at: ‹ConditionalWorkSequence:24 (3)› (step 1)
 ev: IEVENT: whatever
TRACE We got three
END: whatever
NEW: ‹ConditionalWorkSequence:25 (2)›
   : │  id: 25
   : │  call count: 0
   : │  EVENT: state¦three¦-¦foo¦bar
   : └1╴... done.
EVENT: state¦three¦-¦foo¦bar
END: state¦three¦-¦foo¦bar
NEW: ‹ConditionalWorkSequence:26 (2)›
   : │  id: 26
   : │  call count: 0
   : │  EVENT: state¦delete¦foo¦bar
   : │       : prev_value=three
   : └1╴... done.
EVENT: state¦delete¦foo¦bar
     : prev_value=three
END: state¦delete¦foo¦bar
.
