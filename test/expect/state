EVENT: startup
NEW: <ConditionalWorkSequence:1 (4)>
   : │  EVENT: startup
   : └1╴... done.
EVENT: startup
END: startup
0 Yes!
0 Yes!
0 Set to ONE
EVENT: state¦-¦one¦foo¦bar
NEW: <ConditionalWorkSequence:2 (4)>
   : │  EVENT: state¦-¦one¦foo¦bar
   : └1╴... done.
EVENT: state¦-¦one¦foo¦bar
END: state¦-¦one¦foo¦bar
0 Set to TWO
EVENT: state¦one¦two¦foo¦bar
NEW: <ConditionalWorkSequence:3 (4)>
   : │  EVENT: state¦one¦two¦foo¦bar
   : └1╴... done.
EVENT: state¦one¦two¦foo¦bar
END: state¦one¦two¦foo¦bar
0 Create OnEvtHandler: state¦*¦three¦foo¦bar
0 NewHandler 1
0 Set to THREE
EVENT: state¦two¦three¦foo¦bar
NEW: <ConditionalWorkSequence:4 (5)>
   : │  EVENT: state¦two¦three¦foo¦bar
   : ├1╴on state * three foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: try ‹TryStatement›
   : │      : step: set state four foo bar ‹SetStateHandler›
   : │      : step: log DEBUG No! (No shit happened.) ‹LogHandler›
   : └2╴... done.
EVENT: state¦two¦three¦foo¦bar
RUN: on state * three foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: try ‹TryStatement›
   :     : step: set state four foo bar ‹SetStateHandler›
   :     : step: log DEBUG No! (No shit happened.) ‹LogHandler›
 at: <ConditionalWorkSequence:4 (5)> (step 1)
 ev: EVENT: state¦two¦three¦foo¦bar
0 Set to FOUR
1 Yes! (Shit happens.)
END: state¦two¦three¦foo¦bar
0 Create OnEvtHandler: state¦*¦twohalf¦foo¦bar
0 NewHandler 2
0 Set to TWOHALF
EVENT: state¦three¦twohalf¦foo¦bar
NEW: <ConditionalWorkSequence:5 (5)>
   : │  EVENT: state¦three¦twohalf¦foo¦bar
   : ├1╴on state * twohalf foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: set state fourtoo foo bar ‹SetStateHandler›
   : └2╴... done.
EVENT: state¦three¦twohalf¦foo¦bar
RUN: on state * twohalf foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: set state fourtoo foo bar ‹SetStateHandler›
 at: <ConditionalWorkSequence:5 (5)> (step 1)
 ev: EVENT: state¦three¦twohalf¦foo¦bar
0 Set to FOUR
END: state¦three¦twohalf¦foo¦bar
ERROR: Traceback (most recent call last):
     :   File "homevent/twist.py, in <lambda>
     :     d.addCallback(lambda _: p(*a,**k))
     :   File "internet/defer.py, in unwindGenerator
     :     return _inlineCallbacks(None, f(*args, **kwargs), Deferred())
     :   File "internet/defer.py, in _inlineCallbacks
     :     result = g.throw(result.type, result.value, result.tb)
     :   File "homevent/worker.py, in _process
     :     r = failure.Failure()
     : --- <exception caught here> ---
     :   File "homevent/worker.py, in _process
     :     r = yield w.process(event=self.event, queue=self)
     :   File "internet/defer.py, in _inlineCallbacks
     :     result = g.send(result)
     :   File "modules/state.py, in run
     :     raise StateChangeError(s,value)
     : __builtin__.StateChangeError: Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
   in: on state * twohalf foo bar ‹OnEventHandler›
     : prio: 51
     : step: log TRACE Set to FOUR ‹LogHandler›
     : step: set state fourtoo foo bar ‹SetStateHandler›
   in: <ConditionalWorkSequence:5 (5)>
     : │  EVENT: state¦three¦twohalf¦foo¦bar
     : ╞1╕on state * twohalf foo bar ‹OnEventHandler›
     : │ │prio: 51
     : │ │step: log TRACE Set to FOUR ‹LogHandler›
     : │ ╵step: set state fourtoo foo bar ‹SetStateHandler›
     : └2╴... done.
NEW: <WorkSequence:6 (4)>
   : │  ERROR: Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
   : └1╴... done.
ERROR: Traceback (most recent call last):
     :   File "homevent/twist.py, in <lambda>
     :     d.addCallback(lambda _: p(*a,**k))
     :   File "internet/defer.py, in unwindGenerator
     :     return _inlineCallbacks(None, f(*args, **kwargs), Deferred())
     :   File "internet/defer.py, in _inlineCallbacks
     :     result = g.throw(result.type, result.value, result.tb)
     :   File "homevent/worker.py, in _process
     :     r = failure.Failure()
     : --- <exception caught here> ---
     :   File "homevent/worker.py, in _process
     :     r = yield w.process(event=self.event, queue=self)
     :   File "internet/defer.py, in _inlineCallbacks
     :     result = g.send(result)
     :   File "modules/state.py, in run
     :     raise StateChangeError(s,value)
     : __builtin__.StateChangeError: Trying to change state to 'fourtoo' while changing from 'three' to 'twohalf'
   in: on state * twohalf foo bar ‹OnEventHandler›
     : prio: 51
     : step: log TRACE Set to FOUR ‹LogHandler›
     : step: set state fourtoo foo bar ‹SetStateHandler›
   in: <ConditionalWorkSequence:5 (5)>
     : │  EVENT: state¦three¦twohalf¦foo¦bar
     : ╞1╕on state * twohalf foo bar ‹OnEventHandler›
     : │ │prio: 51
     : │ │step: log TRACE Set to FOUR ‹LogHandler›
     : │ ╵step: set state fourtoo foo bar ‹SetStateHandler›
     : └2╴... done.
END: StateChangeError
0 Set to THREE
EVENT: state¦twohalf¦three¦foo¦bar
NEW: <ConditionalWorkSequence:7 (5)>
   : │  EVENT: state¦twohalf¦three¦foo¦bar
   : ├1╴on state * three foo bar ‹OnEventHandler›
   : │  prio: 51
   : │  step: log TRACE Set to FOUR ‹LogHandler›
   : │  step: try ‹TryStatement›
   : │      : step: set state four foo bar ‹SetStateHandler›
   : │      : step: log DEBUG No! (No shit happened.) ‹LogHandler›
   : └2╴... done.
EVENT: state¦twohalf¦three¦foo¦bar
RUN: on state * three foo bar ‹OnEventHandler›
   : prio: 51
   : step: log TRACE Set to FOUR ‹LogHandler›
   : step: try ‹TryStatement›
   :     : step: set state four foo bar ‹SetStateHandler›
   :     : step: log DEBUG No! (No shit happened.) ‹LogHandler›
 at: <ConditionalWorkSequence:7 (5)> (step 1)
 ev: EVENT: state¦twohalf¦three¦foo¦bar
0 Set to FOUR
1 Yes! (Shit happens.)
END: state¦twohalf¦three¦foo¦bar
EVENT: wait¦start¦0.1¦_wait¦1
NEW: <ConditionalWorkSequence:8 (4)>
   : │  EVENT: wait¦start¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦start¦0.1¦_wait¦1
END: wait¦start¦0.1¦_wait¦1
EVENT: wait¦done¦0.1¦_wait¦1
NEW: <ConditionalWorkSequence:9 (4)>
   : │  EVENT: wait¦done¦0.1¦_wait¦1
   : └1╴... done.
EVENT: wait¦done¦0.1¦_wait¦1
END: wait¦done¦0.1¦_wait¦1
foo bar :: three — now
.
value: three
lock: No
last value: twohalf
last change: now
.
0 Yes!
0 Yes!
0 Yes!
0 Create OnEvtHandler: whatever
0 NewHandler 3
EVENT: whatever
NEW: <ConditionalWorkSequence:10 (5)>
   : │  EVENT: whatever
   : ├1╴on whatever ‹OnEventHandler›
   : │  prio: 51
   : │  step: var state x foo bar ‹VarStateHandler›
   : │  step: log TRACE We got $x ‹LogHandler›
   : └2╴... done.
EVENT: whatever
RUN: on whatever ‹OnEventHandler›
   : prio: 51
   : step: var state x foo bar ‹VarStateHandler›
   : step: log TRACE We got $x ‹LogHandler›
 at: <ConditionalWorkSequence:10 (5)> (step 1)
 ev: EVENT: whatever
0 We got three
END: whatever
EVENT: state¦three¦-¦foo¦bar
NEW: <ConditionalWorkSequence:11 (4)>
   : │  EVENT: state¦three¦-¦foo¦bar
   : └1╴... done.
EVENT: state¦three¦-¦foo¦bar
END: state¦three¦-¦foo¦bar
.
EVENT: shutdown
NEW: <ConditionalWorkSequence:12 (6)>
   : │  EVENT: shutdown
   : └1╴... done.
EVENT: shutdown
END: shutdown
